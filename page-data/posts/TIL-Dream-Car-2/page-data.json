{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL-Dream-Car-2","result":{"data":{"markdownRemark":{"id":"a3673b3a-7011-52e2-94f3-8942abc6a6a7","html":"<h1 id=\"우당탕탕-좌충우돌-dreamcar-project-2부\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%8B%B9%ED%83%95%ED%83%95-%EC%A2%8C%EC%B6%A9%EC%9A%B0%EB%8F%8C-dreamcar-project-2%EB%B6%80\" aria-label=\"우당탕탕 좌충우돌 dreamcar project 2부 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우당탕탕 좌충우돌 DreamCar Project 2부</h1>\n<h2 id=\"4-modelspy의-작성\" style=\"position:relative;\"><a href=\"#4-modelspy%EC%9D%98-%EC%9E%91%EC%84%B1\" aria-label=\"4 modelspy의 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Models.py의 작성</h2>\n<p>기본적인 세팅을 마치고 <code class=\"language-text\">python manage.py startapp (앱이름)</code>으로 앱을 만들고 Models.py를 작성하였다.\n우리는 일단 2개의 앱을 만들었다. car, shopping 앱이다.</p>\n<p>여기서는 천체적인 모델을 다 작성하고 싶지만 너무 많아서 기록이 필요한 내용들만 작성하도록 하겠다.</p>\n<h3 id=\"1-manytomany를-사용할때-주의하자\" style=\"position:relative;\"><a href=\"#1-manytomany%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C-%EC%A3%BC%EC%9D%98%ED%95%98%EC%9E%90\" aria-label=\"1 manytomany를 사용할때 주의하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) ManyToMany를 사용할때 주의하자</h3>\n<p>이 부분은 데이터베이스 모델링을 했을때 처음으로 문제가 발생했던 부분으로 그 당시 결국 해결하지 못해 멘토님께 질문을 했던 부분이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomCarOption</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model_version_line      <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'ModelVersionLine'</span><span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    exterior_group          <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'ExteriorGroup'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    interior_group          <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'InteriorGroup'</span><span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    customcar_accessory     <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span><span class=\"token string\">'Accessory'</span><span class=\"token punctuation\">,</span> through<span class=\"token operator\">=</span><span class=\"token string\">'CustomCarAccessory'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ★ 이부분!!</span>\n    package                 <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span><span class=\"token string\">'Package'</span><span class=\"token punctuation\">,</span> through<span class=\"token operator\">=</span><span class=\"token string\">'PackageCustomCar'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        db_table        <span class=\"token operator\">=</span> <span class=\"token string\">'custom_car_options'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomCarAccessory</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    custom_car_option    <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'CustomCarOption'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    accessory            <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Accessory'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    quantity             <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        db_table  <span class=\"token operator\">=</span> <span class=\"token string\">'custom_car_accessories'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Accessory</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name           <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    accessory_category       <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'AccessoryCategory'</span><span class=\"token punctuation\">,</span>on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    thumbnail_url  <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>URLField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        db_table   <span class=\"token operator\">=</span> <span class=\"token string\">'accessories'</span></code></pre></div>\n<p>위에 모델을 보면 ManyToManyField를 사용하는 부분이 있다. 현재 주석과 별표로 표시해둔 부분이다.</p>\n<p>처음에는 저 부분의 colum명이 _(언더스코어)가 없이 <code class=\"language-text\">customcaraccessory</code> 이런 식으로 작성이 되어있었다. 이것이 문제의 시작이었다. ManyToManyFields를 살펴보면 <code class=\"language-text\">models.ManyToManyField(&#39;Accessory&#39;, through=&#39;CustomCarAccessory&#39;)</code> 이런식으로 작성을한다. 해석을 해보면 <code class=\"language-text\">through=&#39;CustomCarAccessory&#39;</code>라는 ManyToMany 중간 테이블을 통해서 중간테이블에 연결되어있는 <code class=\"language-text\">&#39;Accessory&#39;</code>테이블을 참조하겠다는 것이다. 근데 이때 장고 orm은 테이블명을 소문자로 바꾸어 확인을 하는데 이때 테이블명과 컬럼명이 겹쳐 버리게 되는것이다. <code class=\"language-text\">Class CustomCarOption</code>의 <code class=\"language-text\">customcaraccessory</code>컬럼과 <code class=\"language-text\">class CustomCarAccessory</code>테이블이 이름이 겹쳐버린것이다. 그래서 오류가 발생을 하였고 컬럼명을 수정하여 현재의 모습이 되었다.</p>\n<p>사실 물어보러가기 전에 다른 것들의 이름을 다 바꾸어 보았었다. colum명만 빼고 말이죠 ㅠㅠ</p>\n<h3 id=\"2-field타입-작성-후-옵션이-없어도-소괄호작성에-유의\" style=\"position:relative;\"><a href=\"#2-field%ED%83%80%EC%9E%85-%EC%9E%91%EC%84%B1-%ED%9B%84-%EC%98%B5%EC%85%98%EC%9D%B4-%EC%97%86%EC%96%B4%EB%8F%84-%EC%86%8C%EA%B4%84%ED%98%B8%EC%9E%91%EC%84%B1%EC%97%90-%EC%9C%A0%EC%9D%98\" aria-label=\"2 field타입 작성 후 옵션이 없어도 소괄호작성에 유의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) Field타입 작성 후 옵션이 없어도 <code class=\"language-text\">()</code>(소괄호)작성에 유의</h3>\n<p>두번째는 Field 타입을 작성한 후 <code class=\"language-text\">()</code>작성을 하지 않아서 문제가 된 경우이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ContactChannel</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    mail  <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    call  <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sns   <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sms   <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    fax   <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Package</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name                <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    description         <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    description_list    <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위에 작성한 모델을 살펴보면 옵션이 없는 필드는 그냥 <code class=\"language-text\">()</code>괄호가 닫혀있다.\n하지만 작성을하지 않고 <code class=\"language-text\">makemigrations</code>와 <code class=\"language-text\">migrate</code>는 문제 없이 진행이 된다. 처음에는 정상적으로 DB에 테이블까지 만들어져서 이상이 없다고 생각했으나. CSV로 파일을 넣는 중이었던걸로 기억된다. 데이터가 들어가지 않아서 저게 문제인가 싶어서 수정을 하니 데이터가 정상적으로 들어갔다. 추가적으로 더 확인이 필요한 부분이지만 <code class=\"language-text\">()</code>를 작성하면 문제가 없으니 그냥 <code class=\"language-text\">()</code>를 작성하도록하자. 참고로 <code class=\"language-text\">Booleanfield()</code>는 <code class=\"language-text\">1</code>과 <code class=\"language-text\">0</code> 또는 <code class=\"language-text\">True</code>와<code class=\"language-text\">False</code>를 입력받을 수 있습니다.</p>\n<p>Models.py는 <a href=\"https://github.com/shooming/DreamCar-backend/blob/master/car/models.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">car</a> / <a href=\"https://github.com/shooming/DreamCar-backend/blob/master/shopping/models.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">shopping</a> 에서 전체내용을 확인 할 수 있다.</p>","fields":{"slug":"/posts/TIL-Dream-Car-2","tagSlugs":["/tag/project/","/tag/dream-car/","/tag/til/"]},"frontmatter":{"date":"2020-05-05T23:00:00","description":"Project 수행 후 필요한 것 정리","tags":["Project","DreamCar","TIL"],"title":"DreamCar Project 2부","socialImage":""}}},"pageContext":{"slug":"/posts/TIL-Dream-Car-2"}}}