{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Mongo-DB-3","result":{"data":{"markdownRemark":{"id":"e80c5c88-9642-5d61-8fbc-c89875cea51b","html":"<h1 id=\"mongodb의-database-내용-조회하기\" style=\"position:relative;\"><a href=\"#mongodb%EC%9D%98-database-%EB%82%B4%EC%9A%A9-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0\" aria-label=\"mongodb의 database 내용 조회하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mongoDB의 Database 내용 조회하기</h1>\n<p>database에 내용을 작성했다면 그 내용을 확인해야 할 수 있어야한다.\nmongoDB에서는 <code class=\"language-text\">find()</code>문을 사용하여 내용을 손쉽게 조회할 수 있다.</p>\n<h2 id=\"document-조회하기--dbcollection_namefindquery-projection-\" style=\"position:relative;\"><a href=\"#document-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0--dbcollection_namefindquery-projection-\" aria-label=\"document 조회하기  dbcollection_namefindquery projection  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Document 조회하기 ( db.COLLECTION_NAME.find(query. projection) )</h2>\n<p><code class=\"language-text\">find()</code>로 검색한 내용들은 기준에 해당하는 Document들을 선택해서 cursor로 반환한다.\ncursor 객체를 통해서 보이는 데이터를 <code class=\"language-text\">제한(limit)</code>하거나 <code class=\"language-text\">정렬(sort)</code> 할 수 있으며 10분동안 사용되지 않으면 만료된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">파이썬으로 검색해서 나온 cursor 객체</code></pre></div>\n<p>위는 pymongo를 사용하여 파이썬에서 mongdb에 find문을 보내 해당하는 내용들을 가져온 모습이다. 보면 cursor 객체가 반환되었음을 확인 할 수 있다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">parameter</th>\n<th align=\"center\">Type</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">query</td>\n<td align=\"center\">document</td>\n<td>Optional(선택적).  다큐먼트를 조회할 때 기준을 정합니다. 기준이 없이 컬렉션에 있는 모든 다큐먼트를 조회 할때는 이 매개변수를 비우거나 비어있는 다큐먼트 { } 를 전달하세요.</td>\n</tr>\n<tr>\n<td align=\"center\">projection</td>\n<td align=\"center\">document</td>\n<td>Optional. 다큐먼트를 조회할 때 보여질 field를 정합니다.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"dbcollection_namefind\" style=\"position:relative;\"><a href=\"#dbcollection_namefind\" aria-label=\"dbcollection_namefind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collection_name.find()</h3>\n<p>위 명령어는 해당 collection의 document를 조회하는 명령어이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># db.나와라요.find({}) {}안에는 sql query를 넣지만 안넣으면 find()와 같다.</span>\n암튼 내용</code></pre></div>\n<h3 id=\"dbcollecion_namefindpretty\" style=\"position:relative;\"><a href=\"#dbcollecion_namefindpretty\" aria-label=\"dbcollecion_namefindpretty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collecion_name.find().pretty()</h3>\n<p>위 명령어는 find를 통해 나온 검색결과를 보기 좋은 형태로 출력해준다.\n만약 python에서 pymongo를 사용하고 있다면 <code class=\"language-text\">pprint</code>를 사용하여 비슷한 출력결과를 얻을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.pretty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pprint.pprint(질의 결과)</span>\n암튼 내용 </code></pre></div>\n<h3 id=\"dbcollection_namename--김수환무pretty\" style=\"position:relative;\"><a href=\"#dbcollection_namename--%EA%B9%80%EC%88%98%ED%99%98%EB%AC%B4pretty\" aria-label=\"dbcollection_namename  김수환무pretty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collection_name.({“name” : “김수환무”}).pretty</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"김수환무\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>.pretty\n대충 내용</code></pre></div>\n<h3 id=\"find문의-논리-연산자\" style=\"position:relative;\"><a href=\"#find%EB%AC%B8%EC%9D%98-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"find문의 논리 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>find문의 논리 연산자</h3>\n<p>mongodb는 비교 연산자와 논리 연산자를 통해서 원하는 내용들을 검색해올 수 있다.</p>\n<h4 id=\"비교-연산자\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"비교 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교 연산자</h4>\n<table>\n<thead>\n<tr>\n<th>operator</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$eq</td>\n<td>(equals) 주어진 값과 일치하는 값</td>\n</tr>\n<tr>\n<td>$gt</td>\n<td>(greater than) 주어진 값보다 큰 값</td>\n</tr>\n<tr>\n<td>$gte</td>\n<td>(greather than or equals) 주어진 값보다 크거나 같은 값</td>\n</tr>\n<tr>\n<td>$lt</td>\n<td>(less than) 주어진 값보다 작은 값</td>\n</tr>\n<tr>\n<td>$lte</td>\n<td>(less than or equals) 주어진 값보다 작거나 같은 값</td>\n</tr>\n<tr>\n<td>$ne</td>\n<td>(not equal) 주어진 값과 일치하지 않는 값</td>\n</tr>\n<tr>\n<td>$in</td>\n<td>주어진 배열 안에 속하는 값</td>\n</tr>\n<tr>\n<td>$nin</td>\n<td>주어빈 배열 안에 속하지 않는 값</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"논리-연산자\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"논리 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산자</h4>\n<table>\n<thead>\n<tr>\n<th>operator</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$or</td>\n<td>주어진 조건중 하나라도 true 일 때 true</td>\n</tr>\n<tr>\n<td>$and</td>\n<td>주어진 모든 조건이 true 일 때 true</td>\n</tr>\n<tr>\n<td>$not</td>\n<td>주어진 조건이 false 일 때 true</td>\n</tr>\n<tr>\n<td>$nor</td>\n<td>주어진 모든 조건이 false 일때 true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"dbcollection_namefindage--gt-10-lt25pretty\" style=\"position:relative;\"><a href=\"#dbcollection_namefindage--gt-10-lt25pretty\" aria-label=\"dbcollection_namefindage  gt 10 lt25pretty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collection_name.find({“age” : {$gt: 10, $lt:25}}).pretty()</h3>\n<p>위 내용은 age가 10초과 25미만에 해당하는 값들을 찾아오는 find문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"age\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$gt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span>, <span class=\"token variable\">$lt</span>:25<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>.pretty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n대충 내요이 나올 예정임</code></pre></div>\n<h3 id=\"dbcollection_namefindnamein김수한무-고길동-기영이\" style=\"position:relative;\"><a href=\"#dbcollection_namefindnamein%EA%B9%80%EC%88%98%ED%95%9C%EB%AC%B4-%EA%B3%A0%EA%B8%B8%EB%8F%99-%EA%B8%B0%EC%98%81%EC%9D%B4\" aria-label=\"dbcollection_namefindnamein김수한무 고길동 기영이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collection_name.find({“name”:{$in:[“김수한무”, “고길동”, “기영이”]}})</h3>\n<p>위 내용은 <code class=\"language-text\">$in</code>배열에 포함된 Document를 조회하는 find문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$in</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"김수한무\"</span>, <span class=\"token string\">\"고길동\"</span>, <span class=\"token string\">\"기영이\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n대충 해당하는 내용</code></pre></div>\n<h3 id=\"dbcollecion_namefindandname--기영이-age--gt--10\" style=\"position:relative;\"><a href=\"#dbcollecion_namefindandname--%EA%B8%B0%EC%98%81%EC%9D%B4-age--gt--10\" aria-label=\"dbcollecion_namefindandname  기영이 age  gt  10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collecion_name.find({$and:[{“name” : “기영이”}, {“age” : {gt : 10}}]})</h3>\n<p>위 내용은 <code class=\"language-text\">$and</code>문으로 이름이 기영이 이면서 나이가 10을 초과하는 document를 조회하는 find문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token variable\">$and</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"기영이\"</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span><span class=\"token string\">\"age\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$gt</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndb.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"기영이\"</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span><span class=\"token string\">\"age\"</span>:<span class=\"token punctuation\">{</span><span class=\"token variable\">$gt</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 위와 같은 내용이지만 이렇게도 사용할 수 있다.</span></code></pre></div>\n<h3 id=\"dbcollection_namefindor--name--고길동-age--20\" style=\"position:relative;\"><a href=\"#dbcollection_namefindor--name--%EA%B3%A0%EA%B8%B8%EB%8F%99-age--20\" aria-label=\"dbcollection_namefindor  name  고길동 age  20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collection_name.find({$or : [{“name” : “고길동”}, {“age” : “20”}]})</h3>\n<p>위 내용은 <code class=\"language-text\">$or</code>문으로 이름이 고길동 이거나 나이가 20인 document를 찾아오는 find문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token variable\">$or</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"고길동\"</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span><span class=\"token string\">\"age\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"정규표현식을-사용한-find\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-find\" aria-label=\"정규표현식을 사용한 find permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규표현식을 사용한 find</h3>\n<p><code class=\"language-text\">$regex</code> 연산자를 사용하면 정규표현식을 동하여 Document의 내용을 찾아오는 것이 가능하다.\n정규식만 사용한다면 따로 <code class=\"language-text\">$regex</code>를 사용하지 않아도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span> <span class=\"token operator\">&lt;</span>field<span class=\"token operator\">></span>: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$regex</span><span class=\"token builtin class-name\">:</span> /pattern/, <span class=\"token variable\">$options</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'&lt;options>'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span> <span class=\"token operator\">&lt;</span>field<span class=\"token operator\">></span>: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$regex</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'pattern'</span>, <span class=\"token variable\">$options</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'&lt;options>'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span> <span class=\"token operator\">&lt;</span>field<span class=\"token operator\">></span>: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$regex</span><span class=\"token builtin class-name\">:</span> /pattern/<span class=\"token operator\">&lt;</span>options<span class=\"token operator\">></span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span> <span class=\"token operator\">&lt;</span>field<span class=\"token operator\">></span>: /pattern/<span class=\"token operator\">&lt;</span>options<span class=\"token operator\">></span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 사용할수 있는 옵션은 몇 가지가 있다. 옵션의 내용은 아래와 같다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">option</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">i</td>\n<td>대소문자 무시</td>\n</tr>\n<tr>\n<td align=\"center\">m</td>\n<td>정규식에서 anchor(^) 를 사용 할 때 값에 \\n 이 있다면 무력화</td>\n</tr>\n<tr>\n<td align=\"center\">x</td>\n<td>정규식 안에있는 whitespace를 모두 무시</td>\n</tr>\n<tr>\n<td align=\"center\">s</td>\n<td>dot (.) 사용 할 떄 \\n 을 포함해서 매치</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"dbcollecion_namefindname--김\" style=\"position:relative;\"><a href=\"#dbcollecion_namefindname--%EA%B9%80\" aria-label=\"dbcollecion_namefindname  김 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collecion_name.find({“name” : /^김/})</h4>\n<p>위 내용은 name에 성이 김으로 시작하는 사람들만 find해서 가지고오는 find문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> /^김/<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"where-연산자를-사용한-find\" style=\"position:relative;\"><a href=\"#where-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-find\" aria-label=\"where 연산자를 사용한 find permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>where 연산자를 사용한 find</h3>\n<p><code class=\"language-text\">$where</code>연산자를 사용하면 javascript expression(표현식)을 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$where</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"this.name.length === 4\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 이름의 길이가 4글자인 document 검색</span></code></pre></div>\n<h3 id=\"내부-객체-find\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EB%B6%80-%EA%B0%9D%EC%B2%B4-find\" aria-label=\"내부 객체 find permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내부 객체 find</h3>\n<p>내부에 객체를 검색하는 방법에는 몇 가지가 존재한다.</p>\n<ol>\n<li><code class=\"language-text\">$elemMatch</code>연산자로 Embedded Document배열을 하용할 때 사용한다. Embedded Documents는 document의 key에 대한 값이 document가 되는 것이다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"school\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$elemMatch</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"알파 초등학교\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\"># School중에 name의 내용이 알파 초등학교인 document를 조회한다.</span></code></pre></div>\n<ol start=\"2\">\n<li>\n<p>Embedded Document 배열이 아니라 Document의 “name” 처럼 한개의 Embedded Document일 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n<span class=\"token string\">\"username\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"show\"</span>,\n<span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"first\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"megi\"</span> <span class=\"token string\">\"last\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"oh\"</span><span class=\"token punctuation\">}</span>,\n<span class=\"token string\">\"language\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"korean\"</span>, <span class=\"token string\">\"english\"</span>, <span class=\"token string\">\"chinese\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ol>\n<p>}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">위의 document와 같이 Embedded Document가 배열이 아니라 한개 인경우와 document가 아니라 arry 형태가 두가지가 있다.\n\n한개의 document 조회할때\n```bash\ndb.users.find({ &quot;name.first&quot;: &quot;megi&quot;}) # name의 값의 docment의 first가 megi인 것을 find</code></pre></div>\n<p>document의 arry 조회할때</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.users.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"language\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"korean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 키가 language이면서 korean을 값으로 가지는 것 find</span></code></pre></div>\n<h3 id=\"projection\" style=\"position:relative;\"><a href=\"#projection\" aria-label=\"projection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>projection</h3>\n<p>해당 projection은 find() 메소드의 parameter로 qurey의 결과값에서 보여질 field를 결정한다.</p>\n<h4 id=\"dbcollecionnamefind-id--true-name--true\" style=\"position:relative;\"><a href=\"#dbcollecionnamefind-id--true-name--true\" aria-label=\"dbcollecionnamefind id  true name  true permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>db.collecion<em>name.find({}, {”</em>id” : true, “name” : true})</h4>\n<p>위 내용은 전체 document를 가져오며 _id와 name만 가지고 오겠다는 내용이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span><span class=\"token string\">\"_id\"</span> <span class=\"token builtin class-name\">:</span> true, <span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> true<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndb.나와라요.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span><span class=\"token string\">\"_id\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1만 적게되면 true와 같이 작동한다.</span></code></pre></div>\n<h4 id=\"slice-연산자\" style=\"position:relative;\"><a href=\"#slice-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"slice 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>$slice 연산자</h4>\n<p>Embedded Document 내용을 읽을때 limit을 설정하기위 한 연산자이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"김수한무\"</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span><span class=\"token string\">\"school\"</span> <span class=\"token builtin class-name\">:</span>  <span class=\"token punctuation\">{</span><span class=\"token variable\">$slice</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 김수한무의 school은 한개만 나오게 한다.</span></code></pre></div>\n<h4 id=\"elemmatch-연산자\" style=\"position:relative;\"><a href=\"#elemmatch-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"elemmatch 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>$elemMatch 연산자</h4>\n<p>Embedded Document이 존재하는 경우 해당하는 document의 원하는 내용들만 출력하게 해줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"school\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$elemMatch</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"알파 초등학교\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>,\n                 <span class=\"token punctuation\">{</span> <span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> true,\n                   <span class=\"token string\">\"school\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"name\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"알파 초등학교\"</span> <span class=\"token punctuation\">}</span>,\n                   <span class=\"token string\">\"school.name\"</span> <span class=\"token builtin class-name\">:</span> true,\n                   <span class=\"token string\">\"school.location\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">true</span>\n                 <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"findone-조회\" style=\"position:relative;\"><a href=\"#findone-%EC%A1%B0%ED%9A%8C\" aria-label=\"findone 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>findOne 조회</h3>\n<p>해당 명령어는 단 find로 조회한 내용 중 하나만 찾고 싶을때 사용한다. find()[0]으로 가장 첫번째것을 출력해 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">db.나와라요.findOne<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"age\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># age가 10인 내용들 중 가능 첫번째 값을 출력함.</span></code></pre></div>\n<blockquote>\n<p>참조블로그</br><a href=\"https://velopert.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">veloper</a></br><a href=\"https://www.zerocho.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zerocho</a></p>\n</blockquote>","fields":{"slug":"/posts/Mongo-DB-3","tagSlugs":["/tag/mongo-db/","/tag/til/"]},"frontmatter":{"date":"2020-06-06T23:00:00","description":"Mongo DB TIL 배운거 정리","tags":["Mongo DB","TIL"],"title":"Mongo DB 3 TIL","socialImage":""}}},"pageContext":{"slug":"/posts/Mongo-DB-3"}}}