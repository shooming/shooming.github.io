{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Pandas-1-API","result":{"data":{"markdownRemark":{"id":"46b67ff2-c7f1-5fb1-bdcf-fe1e8451656c","html":"<h1 id=\"pandas\" style=\"position:relative;\"><a href=\"#pandas\" aria-label=\"pandas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pandas</h1>\n<p>Pandas는 파이선에서 사용하는 데이터분석 라이브러리로, 행과 열로 이루어진 데이터 객체를 만들 수 있으며\n안정적으로 대용량 데이터를 처리할 수 있다.</p>\n<h2 id=\"pandas-사용하기\" style=\"position:relative;\"><a href=\"#pandas-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"pandas 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pandas 사용하기</h2>\n<p>pandas를 사용하기 위해서 python에 필요한 모듈을 import 해준다. pandas는 기본적으로 사용되며 numpy는 벡터 및 행렬 연산시 사용하기 위해 같이 improt하며, matplotlib는 데이터를 시각화하기 위해 import 하여 사용한다. 각각의 모듈은 pd, np, plt로 줄여서 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pylot <span class=\"token keyword\">as</span> plt</code></pre></div>\n<p>Pandas는 값을 가지고 있는 리스트를 통해 Series를 만들고, 정수로 만들어진 인덱스를 기본값으로 불러올 것입니다.</p>\n<ol>\n<li>\n<p>Object Creation (객체 생성)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">A <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<p>A</p>\n<h6 id=\"아래와-같은-형태로-출력됨\" style=\"position:relative;\"><a href=\"#%EC%95%84%EB%9E%98%EC%99%80-%EA%B0%99%EC%9D%80-%ED%98%95%ED%83%9C%EB%A1%9C-%EC%B6%9C%EB%A0%A5%EB%90%A8\" aria-label=\"아래와 같은 형태로 출력됨 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아래와 같은 형태로 출력됨</h6>\n<p>0    1.0\n1    3.0\n2    5.0\n3    NaN\n4    6.0\n5    8.0\ndtype: float64</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">datetime 인덱스와 레이블이 있는 열을 가지고 있는 numpy 배열을 전달하여 데이터프레임을 만듭니다.\n\n```python\ndates = pd.date_range(&#39;20200501&#39;, periods = 6)\n\ndates\n###### 아래와 같은 형태로 출력됨\nDatetimeIndex([&#39;2020-05-01&#39;, &#39;2020-05-02&#39;, &#39;2020-05-03&#39;, &#39;2020-05-04&#39;,\n               &#39;2020-05-05&#39;, &#39;2020-05-06&#39;],\n              dtype=&#39;datetime64[ns]&#39;, freq=&#39;D&#39;)\n\n###### 데이터 프레임으로 날짜별로 colulm qwer 만들어서 랜덤 값 넣음 \ndf = pd.DataFrame(np.random.randn(6,4), index=dates, columns = list(&#39;qwer&#39;))\ndf\n\n               q\t        w\t        e\t        r\n2020-05-01\t1.203664\t0.035199\t-0.516512\t-1.651954\n2020-05-02\t-0.935893\t0.854944\t-0.814971\t-0.333447\n2020-05-03\t-2.364223\t-2.187468\t1.018928\t1.252907\n2020-05-04\t-2.214020\t0.361885\t-0.390074\t-0.497004\n2020-05-05\t1.387345\t-0.443100\t-0.540677\t-0.370186\n2020-05-06\t0.222998\t-1.308863\t0.433432\t0.409407</code></pre></div>\n<p>Series와 같은 것으로 변환될 수 있는 객체들의 dict로 구성된 데이터프레임을 만듦</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'A'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'B'</span> <span class=\"token punctuation\">:</span> pd<span class=\"token punctuation\">.</span>Timestamp<span class=\"token punctuation\">(</span><span class=\"token string\">'20130102'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'C'</span> <span class=\"token punctuation\">:</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>index<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span><span class=\"token string\">'float32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'D'</span> <span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span><span class=\"token string\">'int32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'E'</span> <span class=\"token punctuation\">:</span> pd<span class=\"token punctuation\">.</span>Categorical<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'F'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ndf2\n     A\t      B\t     C\tD\t  E\t     F\n<span class=\"token number\">0</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">02</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">3</span>\ttest\tfoo\n<span class=\"token number\">1</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">02</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">3</span>\ttrain\tfoo\n<span class=\"token number\">2</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">02</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">3</span>\ttest\tfoo\n<span class=\"token number\">3</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">02</span>\t<span class=\"token number\">1.0</span>\t<span class=\"token number\">3</span>\ttrain\tfoo\n\ndf2<span class=\"token punctuation\">.</span>dtypes\nA           float64\nB    datetime64<span class=\"token punctuation\">[</span>ns<span class=\"token punctuation\">]</span>\nC           float32\nD             int32\nE          category\nF            <span class=\"token builtin\">object</span>\ndtype<span class=\"token punctuation\">:</span> <span class=\"token builtin\">object</span></code></pre></div>\n<p><code class=\"language-text\">df2.&lt;TAB&gt;</code>을 사용하면 df2. 뒤에 사용가능한 명령어들을 보여주지만 Google Colaboratory, Jupyter에서는 사용할 수 없다 대신 dir()함수 쓰면됨.</p>\n<ol start=\"2\">\n<li>Viewing Data (데이터 확인하기)</li>\n</ol>\n<p>데이터 프레임의 가장 윗 줄과 마지막 줄 확인하고 싶을 때 사용하는 방법은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 끝에서 마지막 3줄 붙러옴</span>\ndf<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 끝에서 마지막 5줄 불러옴</span></code></pre></div>\n<p>() 안에 숫자를 쓰지 않으면 default는 5줄로 설정된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 첫 5개 행의 데이터를 보여준다.</span>\n\t            A\t        B\t         C\t         D\n<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">01</span>\t<span class=\"token number\">1.203664</span>\t<span class=\"token number\">0.035199</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.516512</span>\t<span class=\"token operator\">-</span><span class=\"token number\">1.651954</span>\n<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">02</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.935893</span>\t<span class=\"token number\">0.854944</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.814971</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.333447</span>\n<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">03</span>\t<span class=\"token operator\">-</span><span class=\"token number\">2.364223</span>\t<span class=\"token operator\">-</span><span class=\"token number\">2.187468</span>\t<span class=\"token number\">1.018928</span>\t<span class=\"token number\">1.252907</span>\n<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">04</span>\t<span class=\"token operator\">-</span><span class=\"token number\">2.214020</span>\t<span class=\"token number\">0.361885</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.390074</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.497004</span>\n<span class=\"token number\">2013</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">05</span>\t<span class=\"token number\">1.387345</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.443100</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.540677</span>\t<span class=\"token operator\">-</span><span class=\"token number\">0.370186</span>\n\ndf<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#                    A         B         C         D</span>\n<span class=\"token comment\"># 2013-01-04  0.721555 -0.706771 -1.039575  0.271860</span>\n<span class=\"token comment\"># 2013-01-05 -0.424972  0.567020  0.276232 -1.087401</span>\n<span class=\"token comment\"># 2013-01-06 -0.673690  0.113648 -1.478427  0.524988</span></code></pre></div>\n<p>DataFrame의 인덱스를 보려면 .index 속성을, 컬럼을 보려면 .columns 속성을, 안에 들어있는 numpy 데이터를 보려면 .values 속성을 통해 확인하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>index\n<span class=\"token comment\"># DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',</span>\n<span class=\"token comment\">#                '2013-01-05', '2013-01-06'],</span>\n<span class=\"token comment\">#               dtype='datetime64[ns]', freq='D')</span>\n\ndf<span class=\"token punctuation\">.</span>columns\n<span class=\"token comment\"># Index(['A', 'B', 'C', 'D'], dtype='object')</span>\n\ndf<span class=\"token punctuation\">.</span>values\n<span class=\"token comment\"># [[ 0.4691, -0.2829, -1.5091, -1.1356],</span>\n<span class=\"token comment\">#  [ 1.2121, -0.1732,  0.1192, -1.0442],</span>\n<span class=\"token comment\">#  [-0.8618, -2.1046, -0.4949,  1.0718],</span>\n<span class=\"token comment\">#  [ 0.7216, -0.7068, -1.0396,  0.2719],</span>\n<span class=\"token comment\">#  [-0.425 ,  0.567 ,  0.2762, -1.0874],</span>\n<span class=\"token comment\">#  [-0.6737,  0.1136, -1.4784,  0.525 ]]</span></code></pre></div>\n<p><code class=\"language-text\">.describe()</code> 메소드는 생성했던 DataFrame 의 간단한 통계 정보를 보여줍니다. 컬럼별로 데이터의 개수(count), 데이터의 평균값(mean), 표준 편차(std), 최솟값(min), 4분위수(25%, 50%, 75%), 그리고 최댓값(max)들의 정보를 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#               A         B         C         D</span>\n<span class=\"token comment\"># count  6.000000  6.000000  6.000000  6.000000</span>\n<span class=\"token comment\"># mean   0.073711 -0.431125 -0.687758 -0.233103</span>\n<span class=\"token comment\"># std    0.843157  0.922818  0.779887  0.973118</span>\n<span class=\"token comment\"># min   -0.861849 -2.104569 -1.509059 -1.135632</span>\n<span class=\"token comment\"># 25%   -0.611510 -0.600794 -1.368714 -1.076610</span>\n<span class=\"token comment\"># 50%    0.022070 -0.228039 -0.767252 -0.386188</span>\n<span class=\"token comment\"># 75%    0.658444  0.041933 -0.034326  0.461706</span>\n<span class=\"token comment\"># max    1.212112  0.567020  0.276232  1.071804</span></code></pre></div>\n<p>.T 속성은 DataFrame 에서 index 와 column 을 바꾼 형태의 DataFrame 입니다. pandas.DataFrame.T 에는 .T를 ‘Transpose index and columns’와 같이 설명해 놓고 있어서 index 와 column 을 바꾼 후 리턴값으로 돌려주는 메소드로 착각할 수 있습니다. 따라서 .T()로 호출하는 경우가 있으실 텐데, 그렇게 해보니 에러가 나는군요. 메소드가 아니라 미리 계산되어 저장되어 있는 ‘속성’이라는 점을 다시 강조합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## 열과 행을 바꾼 형태의 데이터프레임</span>\ndf<span class=\"token punctuation\">.</span>T\n<span class=\"token comment\">#    2013-01-01  2013-01-02  2013-01-03  2013-01-04  2013-01-05  2013-01-06</span>\n<span class=\"token comment\"># A    0.469112    1.212112   -0.861849    0.721555   -0.424972   -0.673690</span>\n<span class=\"token comment\"># B   -0.282863   -0.173215   -2.104569   -0.706771    0.567020    0.113648</span>\n<span class=\"token comment\"># C   -1.509059    0.119209   -0.494929   -1.039575    0.276232   -1.478427</span>\n<span class=\"token comment\"># D   -1.135632   -1.044236    1.071804    0.271860   -1.087401    0.524988</span>\n\n<span class=\"token comment\">## .T는 속성임을 알아두세요. 다음과 같이 메소드로 호출한다면 에러를 냅니다.</span>\ndf<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Traceback (most recent call last):</span>\n<span class=\"token comment\">#   File \"./main.py\", line 5, in __main__</span>\n<span class=\"token comment\">#     dfT = df.T()</span>\n<span class=\"token comment\"># TypeError: 'DataFrame' object is not callable</span></code></pre></div>\n<p>그리고 .sort_index() 라는 메소드로 행과 열 이름을 정렬하여 나타낼 수도 있습니다. 정렬할 대상 축을 결정할 때에는 axis 를 이용합니다. axis=0 라고 써주면 인덱스를 기준으로 정렬하며(기본값), axis=1 라고 써주면 컬럼을 기준으로 정렬합니다. 정렬의 방향에 대한 파라미터는 ascending 를 이용합니다. ascending=True 는 오름차순 정렬을 하겠다는 것이고(기본값), ascending=False 는 내림차순 정렬을 하겠다는 의미입니다. 다음은 컬럼에 대하여 내림차순 정렬을 하는 예제입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>sort_index<span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#                    D         C         B         A</span>\n<span class=\"token comment\"># 2013-01-01 -1.135632 -1.509059 -0.282863  0.469112</span>\n<span class=\"token comment\"># 2013-01-02 -1.044236  0.119209 -0.173215  1.212112</span>\n<span class=\"token comment\"># 2013-01-03  1.071804 -0.494929 -2.104569 -0.861849</span>\n<span class=\"token comment\"># 2013-01-04  0.271860 -1.039575 -0.706771  0.721555</span>\n<span class=\"token comment\"># 2013-01-05 -1.087401  0.276232  0.567020 -0.424972</span>\n<span class=\"token comment\"># 2013-01-06  0.524988 -1.478427  0.113648 -0.673690</span></code></pre></div>\n<p>또한 DataFrame 내부에 있는 값으로 정렬할 수도 있습니다. 다음은 B 컬럼에 대해 정렬한 결과를 보여줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#                    A         B         C         D</span>\n<span class=\"token comment\"># 2013-01-03 -0.861849 -2.104569 -0.494929  1.071804</span>\n<span class=\"token comment\"># 2013-01-04  0.721555 -0.706771 -1.039575  0.271860</span>\n<span class=\"token comment\"># 2013-01-01  0.469112 -0.282863 -1.509059 -1.135632</span>\n<span class=\"token comment\"># 2013-01-02  1.212112 -0.173215  0.119209 -1.044236</span>\n<span class=\"token comment\"># 2013-01-06 -0.673690  0.113648 -1.478427  0.524988</span>\n<span class=\"token comment\"># 2013-01-05 -0.424972  0.567020  0.276232 -1.087401</span></code></pre></div>","fields":{"slug":"/posts/Pandas-1-API","tagSlugs":["/tag/pandas/","/tag/til/"]},"frontmatter":{"date":"2020-05-31T23:00:00","description":"Pandas TIL 배운거 정리","tags":["Pandas","TIL"],"title":"Pandas 1 TIL","socialImage":""}}},"pageContext":{"slug":"/posts/Pandas-1-API"}}}