{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL-Git-reabse","result":{"data":{"markdownRemark":{"id":"31db5634-9e33-5890-b5bb-bedaad049cc1","html":"<h1 id=\"git-rebase\" style=\"position:relative;\"><a href=\"#git-rebase\" aria-label=\"git rebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git rebase</h1>\n<p>rebase</p>\n<p>merge commit - 단지 merge를 하는 커밋</p>\n<p>fast forward - feature branch 로 옮겨서 작업했으나 그동안 master 변동없을때 그냥 합쳐버림</p>\n<p>rebase - feature에서 작업하는 동안 마스터 버전업했다면 merge와는 다르게 branch의 모든 커밋을 master branch의 최신버전 앞에 추가함\n- rebase하는 이유는 커밋의 히스토리를 보기 쉽게 하기위해서이다.</p>\n<p>squash - 브랜치 나눠서 작업중 커밋이 여러개라면 그 커밋을 하나의 커밋으로 만들어서 합치는 것이다.</p>\n<p>그래서 git rebase + squash(git rebase - i)로 같이함</p>\n<p>git rebase -i master feature/branch 마스터에서 리베이스할때</p>\n<p>git rebase -i master 브랜치에서 할때 </p>\n<p>마스터에서 할때는 목표 브랜치를 선택해주어야한다.</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pick 커밋번호\npick 커밋번호\npick 커밋번호\n\n    <span class=\"token operator\">|</span>\n    V\npick 커밋번호\ns 커밋번호\ns 커밋번호</code></pre></div>\n<p>처음시작 커밋부터 pick하고 s로 스쿼시로 합침</p>\n<p>만약 첫 conflict가 발생하면 첫번쩨 커밋에서 난것이므로 그것을 수정하고 git add만한다.</p>\n<p>그 다음 선택해야함\ngit rebase —continue # 다음으로 넘어갈 시\ngit rebase —abort # rebase 중지</p>\n<p>만약 pr중에 작업수정 후 업데이트 필요시 rebase해야함</p>\n<p>하지만 그당시 master기준이랑 현재 기준이 달라져서 git push가 불가능해진다.</p>\n<p>하지만 git push origin ‘브랜치명’ —force-with-lease로 force로 강제로 밀어넣어야한다.</p>\n<p>git pr올렸는데 수정사항 발생시\n수정사항 발생하면 local에서 수정 후 push한뒤\nrebase 후 강제로 push한다</p>\n<p>git pr merge되었을 경우\nmaster pull 받고 branch 새로 따서 다시 작업한다.</p>","fields":{"slug":"/posts/TIL-Git-reabse","tagSlugs":["/tag/git/","/tag/til/"]},"frontmatter":{"date":"2020-05-23T23:00:00","description":"Git TIL 배운거 정리","tags":["Git","TIL"],"title":"Git TIL","socialImage":""}}},"pageContext":{"slug":"/posts/TIL-Git-reabse"}}}