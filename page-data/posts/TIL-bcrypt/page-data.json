{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL-bcrypt","result":{"data":{"markdownRemark":{"id":"e6054ed0-f10e-5516-9d00-6945776b932a","html":"<h1 id=\"bcrypt\" style=\"position:relative;\"><a href=\"#bcrypt\" aria-label=\"bcrypt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bcrypt</h1>\n<h2 id=\"bcrypt란\" style=\"position:relative;\"><a href=\"#bcrypt%EB%9E%80\" aria-label=\"bcrypt란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bcrypt란</h2>\n<p>비밀번호를 암호화하기 위한 라이브러리의 하나로서 비밀번호를 hash하고 임의적인 문자열을 hash된 암호에 붙이고 다시 해쉬하는 과정을 여러번하여 비밀번호를 찾기 어렵게 한다.</p>\n<h2 id=\"bcrypt로-암호화-하기\" style=\"position:relative;\"><a href=\"#bcrypt%EB%A1%9C-%EC%95%94%ED%98%B8%ED%99%94-%ED%95%98%EA%B8%B0\" aria-label=\"bcrypt로 암호화 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bcrypt로 암호화 하기</h2>\n<p>bcrypt는 <code class=\"language-text\">str</code>형 데이터가 아닌 <code class=\"language-text\">Bytes</code>데이터를 암호화 하기 때문에 암호화 하기 위해서 bytes화 해야한다.</p>\n<p>파이썬에서는 <code class=\"language-text\">str</code>을 encode하면 bytes(이진화)되고, <code class=\"language-text\">Bytes</code>를 decode하면 <code class=\"language-text\">str</code>화 한다.</p>\n<p>encode, decode할때는 사람이 인식할 수 있게 ‘UTF-8’ 유니코드 문자 규격을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">password <span class=\"token operator\">=</span> <span class=\"token string\">'1234'</span>\nhashed_password <span class=\"token operator\">=</span> bcrypt<span class=\"token punctuation\">.</span>hashpw<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bcrypt<span class=\"token punctuation\">.</span>gensalt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hashed_password<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># b'$2b$12$YFs9rh.1LgJwZuf9ibyjpuLvBoCaGX0MzedFWF2Jo0zU3lMZurZ4a'</span></code></pre></div>\n<p>위의 코드는 bcrypt를 사용하여 비밀번호를 암호화 한것이다.</p>\n<p>2번째 줄이 암호화를 하는 부분인데 <code class=\"language-text\">bcrypt.hashpw</code>는 해쉬를 하기위해 bcrypt를 불러온다.\n이제 인자 전달부분을 보면<code class=\"language-text\">password.encode(&#39;utf-8&#39;)</code>비밀번호를 utf-8형태로 인코딩하는 것을 볼 수 있다.</p>\n<p>앞에서 설명했는데 bcrypt는 bytes형태만을 이해 하므로 인코딩을 해주어야한다. 하지만 우리가 알아 볼수있어야하므로 utf-8의 형태를 취한 것이다.</p>\n<p><code class=\"language-text\">bcrypt.gensalt()</code>는 무작위 문자열을 생성하여 해쉬된 암호에 붙이고 다시 해쉬할 수 있게해준다.</p>\n<p>마지막 줄을 보면 b가 붙은 문자열이 있다. 저부분이 암호화한 내용이 저러한 형태로 나오는 것이며, bytes형태이기 때문에 b가 붙어 있는 것이다. decode를 하면 앞에 b가 떨어진 모습을 볼 수 있다.</p>\n<p>만약 회원가입이었다면 우리가 저 비밀번호를 저장해야 할것이다. 하지만 그대로 저장하면 bytes의 형태로 그대로 저장되게 된다. 그렇기 때문에 다시 우리가 알아 볼 수 있도록 decode해서 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">user_email  <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\nuser_name   <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\nuser_id     <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\npassword    <span class=\"token operator\">=</span> hashed_pass<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이런 식으로 저장하면된다.</p>\n<h2 id=\"암호화-해제\" style=\"position:relative;\"><a href=\"#%EC%95%94%ED%98%B8%ED%99%94-%ED%95%B4%EC%A0%9C\" aria-label=\"암호화 해제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암호화 해제</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">new_password <span class=\"token operator\">=</span> <span class=\"token string\">'1234'</span>\nbcrypt<span class=\"token punctuation\">.</span>checkpw<span class=\"token punctuation\">(</span>new_password<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>hashed_password<span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">True</span></code></pre></div>\n<p>위의 코드는 아까와는 반대로 암호화를 해제하고 입력받은 비밀번호가 맞는지 확인하는 절차이다.</p>\n<p>2번째 코드를 보자 <code class=\"language-text\">bcrypt.checkpw</code> 아까와는 다르게 들어온 값이 맞는 지를 확인하려는 것이기 때문에 check임을 알수있다.</p>\n<p><code class=\"language-text\">new_password.encode(&#39;utf-8&#39;)</code> 첫번째 인자는 입력받은 패스워드를 넣는 것이며 encode를 시켜주어야한다.</p>\n<p><code class=\"language-text\">hashed_password</code> 두번째는 암호화된 패스워드이다.</p>","fields":{"slug":"/posts/TIL-bcrypt","tagSlugs":["/tag/bcrypt/","/tag/인증-인가/","/tag/til/"]},"frontmatter":{"date":"2020-04-14T23:10:00","description":"인증/인가 TIL 배운거 정리","tags":["bcrypt","인증*인가","TIL"],"title":"bcrypt TIL","socialImage":""}}},"pageContext":{"slug":"/posts/TIL-bcrypt"}}}