{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL-Data MySQL","result":{"data":{"markdownRemark":{"id":"8b4e0489-43c8-525e-96e8-82f4629638d3","html":"<h1 id=\"mysql\" style=\"position:relative;\"><a href=\"#mysql\" aria-label=\"mysql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySql</h1>\n<ol>\n<li>mysql-server 패키지 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt install -y mysql-server</code></pre></div>\n<p>apt를 사용하여 mysql-server 패키지를 설치한다.</p>\n<ol start=\"2\">\n<li>\n<p>mysql 서버 초기화</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sudo mysql_secure_installation</code></pre></div>\n<p>설치 완료후 서버를 한번 초기화 시켜준다.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">VALIDATE PASSWORD PLUGIN can be used to <span class=\"token builtin class-name\">test</span> passwords\nand improve security. It checks the strength of password\nand allows the <span class=\"token function\">users</span> to <span class=\"token builtin class-name\">set</span> only those passwords <span class=\"token function\">which</span> are\nsecure enough. Would you like to setup VALIDATE PASSWORD plugin?\n\nPress y<span class=\"token operator\">|</span>Y <span class=\"token keyword\">for</span> Yes, any other key <span class=\"token keyword\">for</span> No: No</code></pre></div>\n<p>설치를 하다보면 충분히 강한 패스워드를 생성할 수있는 플러그인을 활성화 하는지 묻는데 No를 입력한다.(원칙은 YES임) yes를 적용하면 간단한 패스워드를 적용 못 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Please <span class=\"token builtin class-name\">set</span> the password <span class=\"token keyword\">for</span> root here.\n\nNew password: \n\nRe-enter new password: </code></pre></div>\n<p>root 계정의 패스워드를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">By default, a MySQL installation has an anonymous user,\nallowing anyone to log into MySQL without having to have\na user account created <span class=\"token keyword\">for</span> them. This is intended only <span class=\"token keyword\">for</span>\ntesting, and to <span class=\"token function\">make</span> the installation go a bit smoother.\nYou should remove them before moving into a production\nenvironment.\n\nRemove anonymous users? <span class=\"token punctuation\">(</span>Press y<span class=\"token operator\">|</span>Y <span class=\"token keyword\">for</span> Yes, any other key <span class=\"token keyword\">for</span> No<span class=\"token punctuation\">)</span> :y</code></pre></div>\n<p>익명의 사용자를 제가하는 것을 묻는것으로 y를 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Normally, root should only be allowed to connect from\n<span class=\"token string\">'localhost'</span><span class=\"token builtin class-name\">.</span> This ensures that someone cannot guess at\nthe root password from the network.\n\nDisallow root login remotely? <span class=\"token punctuation\">(</span>Press y<span class=\"token operator\">|</span>Y <span class=\"token keyword\">for</span> Yes, any other key <span class=\"token keyword\">for</span> No<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">:</span> n</code></pre></div>\n<p>root계정의 외부, 원격로그인을 허용하는지 묻는 내용이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">By default, MySQL comes with a database named <span class=\"token string\">'test'</span> that\nanyone can access. This is also intended only <span class=\"token keyword\">for</span> testing,\nand should be removed before moving into a production\nenvironment.\n\n\nRemove <span class=\"token builtin class-name\">test</span> database and access to it? <span class=\"token punctuation\">(</span>Press y<span class=\"token operator\">|</span>Y <span class=\"token keyword\">for</span> Yes, any other key <span class=\"token keyword\">for</span> No<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">:</span> y</code></pre></div>\n<p>test 데이터베이스를 삭제할지 묻는 내용</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Reloading the privilege tables will ensure that all changes\nmade so far will take effect immediately.\n\nReload privilege tables now? <span class=\"token punctuation\">(</span>Press y<span class=\"token operator\">|</span>Y <span class=\"token keyword\">for</span> Yes, any other key <span class=\"token keyword\">for</span> No<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">:</span> y</code></pre></div>\n<p>privileges table을 다시 로드 할지 묻는 내용</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/mysql restart</code></pre></div>\n<p>설정이 완료되면 MySql 데몬을 다시 실행한다.</p>\n<ol start=\"3\">\n<li>\n<p>MySql 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> mysql -u root -p</code></pre></div>\n<p>MySql 서버에 접속한다.</p>\n</li>\n<li>\n<p>mysql root 로그인시 sudo 안쓰기</p>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">mysql &gt; use mysql;\nmysql &gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;내가원하는 패스워드&#39;;\nmysql &gt; FLUSH PRIVILEGES;</code></pre></div>\n<p>패스워드는 root의 패스워드가 변경되는 것이므로 잘 설정해야한다.</p>\n</li>\n<li>Django MySql 연결하기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 우분투에서 mysqlclient 설치시 오류가 발생한다.</span>\nCommand <span class=\"token string\">\"python setup.py egg_info\"</span> failed with error code <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> /tmp/pip-install-zbw18e9_/mysqlclient/\n<span class=\"token comment\"># gcc도 설치해본다.</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gcc\n  \n<span class=\"token comment\"># 또는 </span>\n  \n/bin/sh: <span class=\"token number\">1</span>: mysql_config: not found\n\n<span class=\"token comment\"># 이때</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libmysqlclient-dev \n<span class=\"token comment\"># 다시 </span>\npip <span class=\"token function\">install</span> mysqlclient</code></pre></div>\n<ol start=\"6\">\n<li>\n<p>Mysql에 장고에서 사용할 데이터 베이스 만들기</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mysql -u root -p</code></pre></div>\n<p>mysql에 접속한다.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">create database 데이터베이스이름 character <span class=\"token builtin class-name\">set</span> utf8mb4 collate utf8mb4_general_ci<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게하면 데이터베이스를 만들 수 있다. 만들어진 데이터베이스의 내용을 my_settings.py에 작성한다.</p>","fields":{"slug":"/posts/TIL-Data MySQL","tagSlugs":["/tag/my-sql/","/tag/til/"]},"frontmatter":{"date":"2020-04-21T23:00:00","description":"MySQL TIL 배운거 정리","tags":["MySQL","TIL"],"title":"MySQL TIL","socialImage":""}}},"pageContext":{"slug":"/posts/TIL-Data MySQL"}}}