{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Mongo-DB-5","result":{"data":{"markdownRemark":{"id":"f50ba12e-d4e9-5b7e-bbac-d41a4fa94558","html":"<h1 id=\"mongodb-관리자-계정-생성하기\" style=\"position:relative;\"><a href=\"#mongodb-%EA%B4%80%EB%A6%AC%EC%9E%90-%EA%B3%84%EC%A0%95-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"mongodb 관리자 계정 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mongoDB 관리자 계정 생성하기</h1>\n<p>이번 기업협업때 test로 만들어놓은 mongoDB에 정보가 갑자기 사라지는 일이 발생하였다. 물론 팀원중에는 데이터를 지울 사람이 당연히 없다. 사실 사용하던 mongoDB server에는 별다른 인증 기능이 따로있지 않았다. 마침 서버에 공격이 있었다고 하긴 했는데 그때 당한건지 아무튼 데이터가 사라져 있었다.</p>\n<p>그래서 이번에는 관리자계정을 따로 만들어서 사용하게되었다.\n관리자 계정을 생성하는 법을 남겨 두고 자한다.</p>\n<h2 id=\"계정-생성하기\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%A0%95-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"계정 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계정 생성하기</h2>\n<p>mongod로 별도의 보안 모델이 없는 MongoDB Server를 실행하고, MongoDB Shell에 접속한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mongo <span class=\"token comment\"># 터미널에서 mongo 접속</span>\n\nMongoDB shell version v3.6.3\nconnecting to: mongodb://127.0.0.1:27017\nMongoDB server version: <span class=\"token number\">3.6</span>.3\n\nuse admin <span class=\"token comment\"># admin DB로 이동한다.</span>\n\n<span class=\"token comment\"># 아래와 명령어를 사용하면 root 권한을 가지는 계정을 만들수 있다.</span>\ndb.createUser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    user: <span class=\"token string\">'username'</span>,\n    pwd: <span class=\"token string\">'password'</span>,\n    roles: <span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>db.createUser()는 현재 사용하고 있는 데이터베이스(여기서는 admin)에 사용자를 추가한다는 뜻이며, 사용자 이름, 비밀번호와 함께 권한(roles)을 array로 정의합니다.\nroles옵션은 <a href=\"https://docs.mongodb.com/manual/reference/built-in-roles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mongoDB 공식</a> 여기서 확인하면된다.</p>\n<p>그리고 위의 명령어는 mongodb 2.4 이하는 db.addUser()를 통해 사용자를 추가해야한다.</p>\n<h2 id=\"authorization-기능-활성화하기\" style=\"position:relative;\"><a href=\"#authorization-%EA%B8%B0%EB%8A%A5-%ED%99%9C%EC%84%B1%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"authorization 기능 활성화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>authorization 기능 활성화하기</h2>\n<p><code class=\"language-text\">/etc/mongod.conf</code>를 수정하고 재시작(systemctl restart mongod)해 주면된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">MongoDB <span class=\"token number\">2</span>.x\n<span class=\"token assign-left variable\">auth</span><span class=\"token operator\">=</span>true</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">MongoDB <span class=\"token number\">3</span>.x\nsecurity:\n    authorization: enabled</code></pre></div>\n<p>3.x버전에서는 security부분이 주석이되어있으므로 바로 찾을 수 있을것이다.\n2.x버전대는 사용한적이 없어서 잘 모르겠지만 auth가 있다면 true처리 해주거나 저 구문을 추가해 주면될거 같다.</p>\n<h2 id=\"admin-데이터베이스에-관리자-인증하기\" style=\"position:relative;\"><a href=\"#admin-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%97%90-%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%9D%B8%EC%A6%9D%ED%95%98%EA%B8%B0\" aria-label=\"admin 데이터베이스에 관리자 인증하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>admin 데이터베이스에 관리자 인증하기</h2>\n<p>관리자 인증하는 방법은 2가지가 있다.</p>\n<ol>\n<li>shell에 접속하여 인증하는법</li>\n<li>shell접속시 username, password 인증하고 들어가기</li>\n</ol>\n<p>일단 첫번째 방법부터 알아 보도록하자.</p>\n<h3 id=\"1-shell에-접속하여-인증하는법\" style=\"position:relative;\"><a href=\"#1-shell%EC%97%90-%EC%A0%91%EC%86%8D%ED%95%98%EC%97%AC-%EC%9D%B8%EC%A6%9D%ED%95%98%EB%8A%94%EB%B2%95\" aria-label=\"1 shell에 접속하여 인증하는법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. shell에 접속하여 인증하는법</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mongo <span class=\"token comment\">#mongo shell에 접속</span>\n\nMongoDB shell version v3.6.3\nconnecting to: mongodb://127.0.0.1:27017\nMongoDB server version: <span class=\"token number\">3.6</span>.3\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token operator\">></span> use admin <span class=\"token comment\"># admin 계정을 만들었던 db로 이동합니다.</span>\n<span class=\"token operator\">></span> db.auth<span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span>, <span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># db.auth를 사용하여 username, password 사용하면됩니다. 이때 ''(따옴표) 작성해서 하면됩니다.</span>\n<span class=\"token number\">1</span> <span class=\"token comment\"># 로그인에 성공하면 1이 나오게된다.</span></code></pre></div>\n<h3 id=\"2-shell접속시-username-password-인증하고-들어가기\" style=\"position:relative;\"><a href=\"#2-shell%EC%A0%91%EC%86%8D%EC%8B%9C-username-password-%EC%9D%B8%EC%A6%9D%ED%95%98%EA%B3%A0-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0\" aria-label=\"2 shell접속시 username password 인증하고 들어가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. shell접속시 username, password 인증하고 들어가기</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mongo -u username -p password --authenticationDatabase admin</code></pre></div>\n<p>위와 같이 작성하면 접속과 동시에 인증을 받을 수 있다.\n인증과 함께 admin 데이터베이스로 접근하려면, 명령어에 명시만 해 주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mongo admin -u username -p password --authenticationDatabase admin</code></pre></div>\n<h2 id=\"일반-사용자-만들기\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"일반 사용자 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반 사용자 만들기</h2>\n<p>일반사용자를 만들때도 사용하는 명령어는 같다 이때 다른점은 사용하려는 DB로 접속해서 해당 DB에만 계정을 만드는것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">use <span class=\"token builtin class-name\">test</span>\ndb.createUser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    user: <span class=\"token string\">'username'</span>,\n    pwd: <span class=\"token string\">'password'</span>,\n    roles: <span class=\"token punctuation\">[</span><span class=\"token string\">'dbOwner'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>dbOwner라는 권한은 해당 데이터베이스에 대한 모든 수정/삭제 권한을 가진다는 것을 의미한다.</p>\n<p>auth를 받는 방법은 use로 해당 db로 이동한 후 db.auth를 사용하면된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">use <span class=\"token builtin class-name\">test</span> <span class=\"token comment\"># test db로 이동함</span>\ndb.auth<span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span>, <span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># auth인증 시도</span>\n<span class=\"token number\">1</span> <span class=\"token comment\"># 성공시 1을 반환</span></code></pre></div>","fields":{"slug":"/posts/Mongo-DB-5","tagSlugs":["/tag/mongo-db/","/tag/til/"]},"frontmatter":{"date":"2020-06-12T23:00:00","description":"Mongo DB TIL 배운거 정리","tags":["Mongo DB","TIL"],"title":"Mongo DB Admin Account Create TIL","socialImage":""}}},"pageContext":{"slug":"/posts/Mongo-DB-5"}}}