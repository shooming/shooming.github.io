{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/ArrayList_LinkedList","result":{"data":{"markdownRemark":{"id":"04e23e24-bd1c-575d-896d-1d4d96f3a74e","html":"<h1 id=\"linked-list와-array-list\" style=\"position:relative;\"><a href=\"#linked-list%EC%99%80-array-list\" aria-label=\"linked list와 array list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linked List와 Array List</h1>\n<p>LinkedList와 ArrayList는 Java에서 제공하는 List의 종류로 필요에 따라 사용자가 골라서 사용할 수 있게 만들어져 있다.</p>\n<p>인덱스를 이용해서 데이터를 가져오는 것이 비번하면 내부적으로 배열을 이용하는 ArrayList가 빠르다. 하지만 데이터의 추가/삭제가 빈번하다면 LinkedList가 휠씬 효과적이다.</p>\n<h2 id=\"array-list\" style=\"position:relative;\"><a href=\"#array-list\" aria-label=\"array list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array List</h2>\n<ul>\n<li>Array List는 배열을 이용해 리스트를 구현한 것을 의미</li>\n<li>장점 : 내부적으로 베열을 사용하므로 인덱스를 이용한 접근이 빠름</li>\n<li>단점 : 데이터의 추가와 삭제가 느리다.</li>\n</ul>\n<h3 id=\"데이터의-추가\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%B6%94%EA%B0%80\" aria-label=\"데이터의 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터의 추가</h3>\n<p>Array List는 내부적으로 데이터를 배열에 저장합니다. 배열의 특성상 데이터를 리스트의 처음이나 중간에 저장하면 이후의 데이터들이 한칸씩 뒤로 물러나야한다.</p>\n<h3 id=\"데이터의-삭제\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%82%AD%EC%A0%9C\" aria-label=\"데이터의 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터의 삭제</h3>\n<p>삭제도 추가처럼 빈자리가 생기면 빈자리를 채우기위해 순차적으로 한칸씩 당긴다.</p>\n<h3 id=\"데이터를-가져오기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"데이터를 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터를 가져오기</h3>\n<p>인덱스를 이용해서 데이터를 가져오고 싶을 때 Array로 구현한 리스트는 매우 빠릅니다. 메모리 상의 주소를 정확하게 참조해서 가져오기 때문이다.</p>\n<h2 id=\"linked-lsit\" style=\"position:relative;\"><a href=\"#linked-lsit\" aria-label=\"linked lsit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linked Lsit</h2>\n<ul>\n<li>Array List와 다르게 엘리먼트 간의 연결(link)을 이용해서 리스트를 구현한 것</li>\n<li>linked list에서 가장 주요한 것은 연결이 무엇인가를 파악하는 것</li>\n<li>Python의 경우 list 기본 자료형에 Linked list 기능이 포함되어 있음</li>\n<li>Array list에서는 엘리먼트라는 이름을 사용했지만 Linked List와 같이 연결된 엘리먼트들은 노드(node) 혹은 버텍스(vertex) 라고 부른다.</li>\n</ul>\n<blockquote>\n<p>참조블로그\n<a href=\"https://opentutorials.org/module/1335\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">생활코딩</a>\n<a href=\"https://wayhome25.github.io/cs/2017/04/17/cs-18-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">초보몽키</a></p>\n</blockquote>","fields":{"slug":"/posts/ArrayList_LinkedList","tagSlugs":["/tag/data-structure/","/tag/til/"]},"frontmatter":{"date":"2020-12-04T23:00:00","description":"ArrayList & LinkedList TIL 배운거 정리","tags":["Data Structure","TIL"],"title":"ArrayList & LinkedList TIL","socialImage":""}}},"pageContext":{"slug":"/posts/ArrayList_LinkedList"}}}