{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/blog/TIL/2020-05-04-Database/","result":{"pageContext":{"article":{"banner":{"alt":"TIL","caption":"Photo by <u><a href=\"https://wonkooklee.github.io/thumbnail_maker/\">Thumbnail Maker</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='660'%20height='400'%20viewBox='0%200%20660%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20200v200h661V0H0v200m211-13c0%206%200%207-1%206-10-4-19%203-19%2015s9%2019%2018%2014h4l3%201h2v-44h-7v8m311-8v8c0%207%200%207-2%206-11-4-20%205-19%2018%202%2011%2010%2016%2019%2011%202-2%203-2%203%200l3%201h2v-42c1-2-5-3-6-2m-394%207c0%202%200%202%206%202h6v35h7v-35h6l5-1%201-2c0-2-2-2-15-2h-16v3m171%2017v20h7v-40h-7v20m29%200v20h24v-5h-17v-35h-7v20m-164-8c-11%209-7%2027%207%2029%2014%201%2021-20%209-29-4-4-12-4-16%200m66-2c-3%202-4%203-2%206h4c5-3%207-2%209%200%203%203%202%205-2%205-8%200-15%206-14%2012%202%207%208%2010%2015%206h4l3%201h2v-13c0-12%200-12-3-15s-10-4-16-2m134%200c-10%204-12%2022-3%2028%206%205%2020%203%2018-2%200-2-1-2-2-2-8%203-13%202-15-4l-1-3h20v-3c0-11-8-18-17-14m26%201c-4%201-5%202-3%204%201%202%202%202%205%201%205-3%208-2%2010%200%201%203%201%205-2%205-8%200-15%205-15%2011%200%208%207%2011%2015%207%203-2%204-2%204-1s1%202%203%202h2v-12c0-16-2-19-11-19l-8%202m36%201c-3%202-3%202-3%200s-1-2-3-2h-3v30h7v-10c0-11%202-15%207-15%203%200%204-1%204-5%200-2-6-1-9%202m23-1c-3%202-4%202-4%201l-2-2h-3v30h6v-11c0-12%201-13%206-14%205-2%206%201%206%2014v11h7v-10c0-11-1-17-4-19-3-3-9-2-12%200m31-1c-10%203-12%2021-4%2028%207%205%2023%203%2019-2-1-2-2-2-5-1-4%202-9%200-11-3-3-5-3-5%208-5h10v-3c0-11-8-18-17-14m-226%201l1%203%2010%2027c0%203-5%207-7%207-1-1-2%200-2%202-1%203%201%203%205%203%206-1%208-5%2014-24l7-18-3-1c-4%200-5%201-8%2016l-2%206-4-10c-4-12-4-12-8-12l-3%201m-85%204c-4%201-5%2012-3%2017%203%205%2010%205%2012-1%204-9-2-19-9-16m33%200c-6%203-6%2018%201%2020%205%202%207%200%208-10v-9c-2-1-6-2-9-1m311%200c-3%201-5%206-5%2010%200%209%206%2013%2012%208%202-2%203-15%201-17-2-1-6-2-8-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png","srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/41200/TIL.png 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/f979a/TIL.png 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png 660w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/322ad/TIL.webp 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/de3b3/TIL.webp 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/2b2b5/TIL.webp 660w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<h1>Database</h1>\n<p>데이터를 저장, 보존 하는 시스템으로 application에서는 데이터가 메모리상에 존재하고 보존되지 않는다. 그래서 필요한 정보를 장기간 저장, 보존하기 위해서 데이터 베이스를 사용하는 것이다.</p>\n<h2>관계형 데이터베이스(RDBMS, Relational DataBase Management System)</h2>\n<p>관계형 데이터란 데이터를 서로 상호 관련성을 가진 형태로 표현한 데이터를 말한다.\n- 모든 데이터들은 2차원 테이블(talbe)들로 표현된다.\n- 각각의 테이블은 컬럼(column)과 row(로우)로 구성된다.\n- 컬럼은 테이블의 각 항목을 말한다. 열로 생각하면 된다.\n- 로우는 각 항목들의 실제 값들을 이야기 한다. 행으로 생각하면 된다.\n- 각 로우는 저만의 고유 키(Primary Key)가 있다. 주로 이 primary key를 통해서 해당 로우를 찾거나 인용(reference)하게 된다.\n- 각각의 테이블들은 서로 상호관련성을 가지고 서로 연결될 수 있다.</p>\n<p>테이블은 3가지 종류가 있다.</p>\n<ul>\n<li>one to one</li>\n</ul>\n<p><img src=\"../../images/database/one-to-one.png\" alt=\"one-to-one\"><br></p>\n<ul>\n<li>one to many</li>\n</ul>\n<p><img src=\"../../images/database/one-to-many.png\" alt=\"one-to-many\"><br></p>\n<ul>\n<li>many to many</li>\n</ul>\n<p><img src=\"../../images/database/many-to-many.png\" alt=\"many-to-many\"></p>\n<h2>테이블 연결 방법</h2>\n<p>Foreign key(외부키)라는 개념을 사용해서 주로 연결한다.\n앞서 본 one to one 예에서 user_profiles 테이블의 user_id 컬럼은 users 테이블에 걸려있는 외부 키라고 지정한다.\n즉 데이터베이스에게 user_id값은 users 테이블의 id 값이며 그러므로 users테이블의 id 컬럼에 존재하는 값만 생성 될 수 있다.</p>\n<h2>테이블을 연결하는 이유</h2>\n<p>하나의 테이블에 모든 정보를 다 넣으면 동일한 정보들이 중복되어 저장된다.\n- 더 많은 디스크 사용\n- 잘못된 데이터 저장 가능성 높아짐\n여러 테이블에 나누어 저장한후 필요한 테이블 끼리 연결시키면 위의 2문제가 해결된다.</p>\n<p>즉 중복 없애므로서 디스크를 효율적으로 쓰고, 서로 같은 데이터이지만 부분적으로 틀린 데이터가 생기는 문제가 없어진다.\n이것을 normalization이라고 한다.</p>\n<h2>트랜잭션(Transaction)-TPS</h2>\n<p>ACID를 제공하며 질의 실행하면 실행하다 중단되면 다시시도 하고 실패하면 취소, 성공하면 commit을 하는 하나의 작업수행의 논리적 단위이다. 전체가 성공하거나 실패하고 나 둘중의 하나이다.</p>\n<h2>ACID</h2>\n<p>원자성, 일관성. 고립성. 지속성의 약자이다.</p>\n<ul>\n<li>원자성(Atomicity)\n부분적으로 실행되다 중단되지 않음을 보장하는것 돈보내는 쪽이랑 받는쪽 둘다 성공해야한 중간에 실패되면 그냥 양쪽다 실패</li>\n<li>일관성(Consistency)\n트랜잭션 실행 성공적으로 완료하여 일관성 있는 데이토 유지</li>\n<li>고립성(Isolation)\n트랜잭션을 수행하면 다른 트랜잭션은 연산작업에 끼어들 수 없다.</li>\n<li>지속성(Durability)\n성공적으로 수행된 트랜잭션은 영원히 반영되어야 함</li>\n</ul>\n<h2>NoSQL 데이터베이스</h2>\n<p>비관계형 타입의 데이터를 저장할때 사용</p>\n<p>관계형 데이터베이스와 다르게 비관계형이므로 데이터 저장전 정의 할 필요가 없음</p>\n<h2>각 데이터 베이스별 장단점</h2>\n<p>SQL(RDBMS)</p>\n<ul>\n<li>장점\n<ol>\n<li>효율적이고 체계적으로 저장하고 관리함</li>\n<li>데이터들의 구조(스키마)를 정의하여 데이터의 완전성 보장</li>\n<li>Transaction</li>\n</ol>\n</li>\n<li>단점\n<ol>\n<li>테이블을 정의해야하므로 구조변화에 민감</li>\n<li>확장성이 쉽지않음\n<ul>\n<li>구조가 미리 정의되어 있어서 서버늘린다고 확장 쉽지 않고 서버의 서능도 높여야함</li>\n<li>서버를 늘려서 분산 저장 하는것도 쉽지않음</li>\n<li></li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","categories":["DataBase"],"date":"May 04, 2020","description":"DataBase 공부한것 정리","id":"11794a80-5b50-5bf5-8129-5b7e6fe479b7","keywords":["DataBase","TIL"],"slug":"/blog/TIL/2020-05-04-Database/","title":"DataBase","readingTime":{"text":"6 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1094019748","36698639"]}