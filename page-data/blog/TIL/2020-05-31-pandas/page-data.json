{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/blog/TIL/2020-05-31-pandas/","result":{"pageContext":{"article":{"banner":{"alt":"TIL","caption":"Photo by <u><a href=\"https://wonkooklee.github.io/thumbnail_maker/\">Thumbnail Maker</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='660'%20height='400'%20viewBox='0%200%20660%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20200v200h661V0H0v200m211-13c0%206%200%207-1%206-10-4-19%203-19%2015s9%2019%2018%2014h4l3%201h2v-44h-7v8m311-8v8c0%207%200%207-2%206-11-4-20%205-19%2018%202%2011%2010%2016%2019%2011%202-2%203-2%203%200l3%201h2v-42c1-2-5-3-6-2m-394%207c0%202%200%202%206%202h6v35h7v-35h6l5-1%201-2c0-2-2-2-15-2h-16v3m171%2017v20h7v-40h-7v20m29%200v20h24v-5h-17v-35h-7v20m-164-8c-11%209-7%2027%207%2029%2014%201%2021-20%209-29-4-4-12-4-16%200m66-2c-3%202-4%203-2%206h4c5-3%207-2%209%200%203%203%202%205-2%205-8%200-15%206-14%2012%202%207%208%2010%2015%206h4l3%201h2v-13c0-12%200-12-3-15s-10-4-16-2m134%200c-10%204-12%2022-3%2028%206%205%2020%203%2018-2%200-2-1-2-2-2-8%203-13%202-15-4l-1-3h20v-3c0-11-8-18-17-14m26%201c-4%201-5%202-3%204%201%202%202%202%205%201%205-3%208-2%2010%200%201%203%201%205-2%205-8%200-15%205-15%2011%200%208%207%2011%2015%207%203-2%204-2%204-1s1%202%203%202h2v-12c0-16-2-19-11-19l-8%202m36%201c-3%202-3%202-3%200s-1-2-3-2h-3v30h7v-10c0-11%202-15%207-15%203%200%204-1%204-5%200-2-6-1-9%202m23-1c-3%202-4%202-4%201l-2-2h-3v30h6v-11c0-12%201-13%206-14%205-2%206%201%206%2014v11h7v-10c0-11-1-17-4-19-3-3-9-2-12%200m31-1c-10%203-12%2021-4%2028%207%205%2023%203%2019-2-1-2-2-2-5-1-4%202-9%200-11-3-3-5-3-5%208-5h10v-3c0-11-8-18-17-14m-226%201l1%203%2010%2027c0%203-5%207-7%207-1-1-2%200-2%202-1%203%201%203%205%203%206-1%208-5%2014-24l7-18-3-1c-4%200-5%201-8%2016l-2%206-4-10c-4-12-4-12-8-12l-3%201m-85%204c-4%201-5%2012-3%2017%203%205%2010%205%2012-1%204-9-2-19-9-16m33%200c-6%203-6%2018%201%2020%205%202%207%200%208-10v-9c-2-1-6-2-9-1m311%200c-3%201-5%206-5%2010%200%209%206%2013%2012%208%202-2%203-15%201-17-2-1-6-2-8-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png","srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/41200/TIL.png 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/f979a/TIL.png 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png 660w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/322ad/TIL.webp 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/de3b3/TIL.webp 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/2b2b5/TIL.webp 660w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<h1>Pandas</h1>\n<p>Pandas는 파이선에서 사용하는 데이터분석 라이브러리로, 행과 열로 이루어진 데이터 객체를 만들 수 있으며\r\n안정적으로 대용량 데이터를 처리할 수 있다.</p>\n<h2>pandas 사용하기</h2>\n<p>pandas를 사용하기 위해서 python에 필요한 모듈을 import 해준다. pandas는 기본적으로 사용되며 numpy는 벡터 및 행렬 연산시 사용하기 위해 같이 improt하며, matplotlib는 데이터를 시각화하기 위해 import 하여 사용한다. 각각의 모듈은 pd, np, plt로 줄여서 사용한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> pandas </span><span class=\"mtk7\">as</span><span class=\"mtk1\"> pd</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> numpy </span><span class=\"mtk7\">as</span><span class=\"mtk1\"> np</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> matplotlib.pylot </span><span class=\"mtk7\">as</span><span class=\"mtk1\"> plt</span></span></span></code></pre>\n<p>Pandas는 값을 가지고 있는 리스트를 통해 Series를 만들고, 정수로 만들어진 인덱스를 기본값으로 불러올 것입니다.</p>\n<ol>\n<li>Object Creation (객체 생성)</li>\n</ol>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">A </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> pd.Series([</span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, np.nan, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">8</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">A</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">###### 아래와 같은 형태로 출력됨</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">0</span><span class=\"mtk1\">    </span><span class=\"mtk4\">1.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">1</span><span class=\"mtk1\">    </span><span class=\"mtk4\">3.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2</span><span class=\"mtk1\">    </span><span class=\"mtk4\">5.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">3</span><span class=\"mtk1\">    NaN</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">4</span><span class=\"mtk1\">    </span><span class=\"mtk4\">6.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">5</span><span class=\"mtk1\">    </span><span class=\"mtk4\">8.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dtype: float64</span></span></span></code></pre>\n<p>datetime 인덱스와 레이블이 있는 열을 가지고 있는 numpy 배열을 전달하여 데이터프레임을 만듭니다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dates </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> pd.date_range(</span><span class=\"mtk11\">&#39;20200501&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">periods</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">6</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dates</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">###### 아래와 같은 형태로 출력됨</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">DatetimeIndex([</span><span class=\"mtk11\">&#39;2020-05-01&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;2020-05-02&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;2020-05-03&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;2020-05-04&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk11\">&#39;2020-05-05&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;2020-05-06&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk19 mtki\">dtype</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;datetime64[ns]&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">freq</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;D&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">###### 데이터 프레임으로 날짜별로 colulm qwer 만들어서 랜덤 값 넣음 </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> pd.DataFrame(np.random.randn(</span><span class=\"mtk4\">6</span><span class=\"mtk1\">,</span><span class=\"mtk4\">4</span><span class=\"mtk1\">), </span><span class=\"mtk19 mtki\">index</span><span class=\"mtk7\">=</span><span class=\"mtk1\">dates, </span><span class=\"mtk19 mtki\">columns</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">list</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;qwer&#39;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               q\t        w\t        e\t        r</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2020</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.203664</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.035199</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.516512</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">1.651954</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2020</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.935893</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.854944</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.814971</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.333447</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2020</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">3</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">2.364223</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">2.187468</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.018928</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.252907</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2020</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">4</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">2.214020</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.361885</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.390074</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.497004</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2020</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.387345</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.443100</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.540677</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.370186</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2020</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">6</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.222998</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">1.308863</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.433432</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.409407</span></span></span></code></pre>\n<p>Series와 같은 것으로 변환될 수 있는 객체들의 dict로 구성된 데이터프레임을 만듦</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> pd.DataFrame({</span><span class=\"mtk11\">&#39;A&#39;</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">1</span><span class=\"mtk1\">.,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">&#39;B&#39;</span><span class=\"mtk1\"> : pd.Timestamp(</span><span class=\"mtk11\">&#39;20130102&#39;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">&#39;C&#39;</span><span class=\"mtk1\"> : pd.Series(</span><span class=\"mtk4\">1</span><span class=\"mtk1\">,</span><span class=\"mtk19 mtki\">index</span><span class=\"mtk7\">=</span><span class=\"mtk15 mtki\">list</span><span class=\"mtk1\">(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">4</span><span class=\"mtk1\">)),</span><span class=\"mtk19 mtki\">dtype</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;float32&#39;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">&#39;D&#39;</span><span class=\"mtk1\"> : np.array([</span><span class=\"mtk4\">3</span><span class=\"mtk1\">] </span><span class=\"mtk7\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">4</span><span class=\"mtk1\">,</span><span class=\"mtk19 mtki\">dtype</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;int32&#39;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">&#39;E&#39;</span><span class=\"mtk1\"> : pd.Categorical([</span><span class=\"mtk11\">&quot;test&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk11\">&quot;train&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk11\">&quot;test&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk11\">&quot;train&quot;</span><span class=\"mtk1\">]),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">&#39;F&#39;</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">&#39;foo&#39;</span><span class=\"mtk1\"> })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     A\t      B\t     C\tD\t  E\t     F</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">3</span><span class=\"mtk1\">\ttest\tfoo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">1</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">3</span><span class=\"mtk1\">\ttrain\tfoo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">3</span><span class=\"mtk1\">\ttest\tfoo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">3</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.0</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">3</span><span class=\"mtk1\">\ttrain\tfoo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df2.dtypes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">A           float64</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">B    datetime64[ns]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">C           float32</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">D             int32</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">E          category</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">F            </span><span class=\"mtk15 mtki\">object</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dtype: </span><span class=\"mtk15 mtki\">object</span></span></span></code></pre>\n<p><code>df2.&#x3C;TAB></code>을 사용하면 df2. 뒤에 사용가능한 명령어들을 보여주지만 Google Colaboratory, Jupyter에서는 사용할 수 없다 대신 dir()함수 쓰면됨.</p>\n<ol start=\"2\">\n<li>Viewing Data (데이터 확인하기)</li>\n</ol>\n<p>데이터 프레임의 가장 윗 줄과 마지막 줄 확인하고 싶을 때 사용하는 방법은 아래와 같다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.tail(</span><span class=\"mtk4\">3</span><span class=\"mtk1\">) </span><span class=\"mtk3\"># 끝에서 마지막 3줄 붙러옴</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.tail() </span><span class=\"mtk3\"># 끝에서 마지막 5줄 불러옴</span></span></span></code></pre>\n<p>() 안에 숫자를 쓰지 않으면 default는 5줄로 설정된다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.head() </span><span class=\"mtk3\"># 첫 5개 행의 데이터를 보여준다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            A\t        B\t         C\t         D</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.203664</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.035199</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.516512</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">1.651954</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">2</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.935893</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.854944</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.814971</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.333447</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">3</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">2.364223</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">2.187468</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.018928</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.252907</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">4</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">2.214020</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">0.361885</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.390074</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.497004</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">2013</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">1</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0</span><span class=\"mtk8\">5</span><span class=\"mtk1\">\t</span><span class=\"mtk4\">1.387345</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.443100</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.540677</span><span class=\"mtk1\">\t</span><span class=\"mtk7\">-</span><span class=\"mtk4\">0.370186</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.tail(</span><span class=\"mtk4\">3</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#                    A         B         C         D</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-04  0.721555 -0.706771 -1.039575  0.271860</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-05 -0.424972  0.567020  0.276232 -1.087401</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-06 -0.673690  0.113648 -1.478427  0.524988</span></span></span></code></pre>\n<p>DataFrame의 인덱스를 보려면 .index 속성을, 컬럼을 보려면 .columns 속성을, 안에 들어있는 numpy 데이터를 보려면 .values 속성을 통해 확인하면 됩니다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.index</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># DatetimeIndex([&#39;2013-01-01&#39;, &#39;2013-01-02&#39;, &#39;2013-01-03&#39;, &#39;2013-01-04&#39;,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#                &#39;2013-01-05&#39;, &#39;2013-01-06&#39;],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#               dtype=&#39;datetime64[ns]&#39;, freq=&#39;D&#39;)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.columns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Index([&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;], dtype=&#39;object&#39;)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.values</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># [[ 0.4691, -0.2829, -1.5091, -1.1356],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#  [ 1.2121, -0.1732,  0.1192, -1.0442],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#  [-0.8618, -2.1046, -0.4949,  1.0718],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#  [ 0.7216, -0.7068, -1.0396,  0.2719],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#  [-0.425 ,  0.567 ,  0.2762, -1.0874],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#  [-0.6737,  0.1136, -1.4784,  0.525 ]]</span></span></span></code></pre>\n<p><code>.describe()</code> 메소드는 생성했던 DataFrame 의 간단한 통계 정보를 보여줍니다. 컬럼별로 데이터의 개수(count), 데이터의 평균값(mean), 표준 편차(std), 최솟값(min), 4분위수(25%, 50%, 75%), 그리고 최댓값(max)들의 정보를 알 수 있습니다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.describe()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#               A         B         C         D</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># count  6.000000  6.000000  6.000000  6.000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># mean   0.073711 -0.431125 -0.687758 -0.233103</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># std    0.843157  0.922818  0.779887  0.973118</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># min   -0.861849 -2.104569 -1.509059 -1.135632</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 25%   -0.611510 -0.600794 -1.368714 -1.076610</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 50%    0.022070 -0.228039 -0.767252 -0.386188</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 75%    0.658444  0.041933 -0.034326  0.461706</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># max    1.212112  0.567020  0.276232  1.071804</span></span></span></code></pre>\n<p>.T 속성은 DataFrame 에서 index 와 column 을 바꾼 형태의 DataFrame 입니다. pandas.DataFrame.T 에는 .T를 ‘Transpose index and columns’와 같이 설명해 놓고 있어서 index 와 column 을 바꾼 후 리턴값으로 돌려주는 메소드로 착각할 수 있습니다. 따라서 .T()로 호출하는 경우가 있으실 텐데, 그렇게 해보니 에러가 나는군요. 메소드가 아니라 미리 계산되어 저장되어 있는 ‘속성’이라는 점을 다시 강조합니다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## 열과 행을 바꾼 형태의 데이터프레임</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.T</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#    2013-01-01  2013-01-02  2013-01-03  2013-01-04  2013-01-05  2013-01-06</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># A    0.469112    1.212112   -0.861849    0.721555   -0.424972   -0.673690</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># B   -0.282863   -0.173215   -2.104569   -0.706771    0.567020    0.113648</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># C   -1.509059    0.119209   -0.494929   -1.039575    0.276232   -1.478427</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># D   -1.135632   -1.044236    1.071804    0.271860   -1.087401    0.524988</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## .T는 속성임을 알아두세요. 다음과 같이 메소드로 호출한다면 에러를 냅니다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.T()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Traceback (most recent call last):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#   File &quot;./main.py&quot;, line 5, in __main__</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#     dfT = df.T()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># TypeError: &#39;DataFrame&#39; object is not callable</span></span></span></code></pre>\n<p>그리고 .sort_index() 라는 메소드로 행과 열 이름을 정렬하여 나타낼 수도 있습니다. 정렬할 대상 축을 결정할 때에는 axis 를 이용합니다. axis=0 라고 써주면 인덱스를 기준으로 정렬하며(기본값), axis=1 라고 써주면 컬럼을 기준으로 정렬합니다. 정렬의 방향에 대한 파라미터는 ascending 를 이용합니다. ascending=True 는 오름차순 정렬을 하겠다는 것이고(기본값), ascending=False 는 내림차순 정렬을 하겠다는 의미입니다. 다음은 컬럼에 대하여 내림차순 정렬을 하는 예제입니다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.sort_index(</span><span class=\"mtk19 mtki\">axis</span><span class=\"mtk7\">=</span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">ascending</span><span class=\"mtk7\">=</span><span class=\"mtk4\">False</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#                    D         C         B         A</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-01 -1.135632 -1.509059 -0.282863  0.469112</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-02 -1.044236  0.119209 -0.173215  1.212112</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-03  1.071804 -0.494929 -2.104569 -0.861849</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-04  0.271860 -1.039575 -0.706771  0.721555</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-05 -1.087401  0.276232  0.567020 -0.424972</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-06  0.524988 -1.478427  0.113648 -0.673690</span></span></span></code></pre>\n<p>또한 DataFrame 내부에 있는 값으로 정렬할 수도 있습니다. 다음은 B 컬럼에 대해 정렬한 결과를 보여줍니다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">df.sort_values(</span><span class=\"mtk19 mtki\">by</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;B&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">#                    A         B         C         D</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-03 -0.861849 -2.104569 -0.494929  1.071804</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-04  0.721555 -0.706771 -1.039575  0.271860</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-01  0.469112 -0.282863 -1.509059 -1.135632</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-02  1.212112 -0.173215  0.119209 -1.044236</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-06 -0.673690  0.113648 -1.478427  0.524988</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 2013-01-05 -0.424972  0.567020  0.276232 -1.087401</span></span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk8 { color: #F8F8F0; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","categories":["Pandas"],"date":"May 31, 2020","description":"Pandas TIL 배운거 정리","id":"37265228-70e6-51f1-8a06-2df74d85f05d","keywords":["Pandas","TIL"],"slug":"/blog/TIL/2020-05-31-pandas/","title":"Pandas 1 TIL","readingTime":{"text":"8 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1094019748","36698639"]}