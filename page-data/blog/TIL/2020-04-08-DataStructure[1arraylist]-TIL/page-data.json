{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/blog/TIL/2020-04-08-DataStructure[1arraylist]-TIL/","result":{"pageContext":{"article":{"banner":{"alt":"TIL","caption":"Photo by <u><a href=\"https://wonkooklee.github.io/thumbnail_maker/\">Thumbnail Maker</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='660'%20height='400'%20viewBox='0%200%20660%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20200v200h661V0H0v200m211-13c0%206%200%207-1%206-10-4-19%203-19%2015s9%2019%2018%2014h4l3%201h2v-44h-7v8m311-8v8c0%207%200%207-2%206-11-4-20%205-19%2018%202%2011%2010%2016%2019%2011%202-2%203-2%203%200l3%201h2v-42c1-2-5-3-6-2m-394%207c0%202%200%202%206%202h6v35h7v-35h6l5-1%201-2c0-2-2-2-15-2h-16v3m171%2017v20h7v-40h-7v20m29%200v20h24v-5h-17v-35h-7v20m-164-8c-11%209-7%2027%207%2029%2014%201%2021-20%209-29-4-4-12-4-16%200m66-2c-3%202-4%203-2%206h4c5-3%207-2%209%200%203%203%202%205-2%205-8%200-15%206-14%2012%202%207%208%2010%2015%206h4l3%201h2v-13c0-12%200-12-3-15s-10-4-16-2m134%200c-10%204-12%2022-3%2028%206%205%2020%203%2018-2%200-2-1-2-2-2-8%203-13%202-15-4l-1-3h20v-3c0-11-8-18-17-14m26%201c-4%201-5%202-3%204%201%202%202%202%205%201%205-3%208-2%2010%200%201%203%201%205-2%205-8%200-15%205-15%2011%200%208%207%2011%2015%207%203-2%204-2%204-1s1%202%203%202h2v-12c0-16-2-19-11-19l-8%202m36%201c-3%202-3%202-3%200s-1-2-3-2h-3v30h7v-10c0-11%202-15%207-15%203%200%204-1%204-5%200-2-6-1-9%202m23-1c-3%202-4%202-4%201l-2-2h-3v30h6v-11c0-12%201-13%206-14%205-2%206%201%206%2014v11h7v-10c0-11-1-17-4-19-3-3-9-2-12%200m31-1c-10%203-12%2021-4%2028%207%205%2023%203%2019-2-1-2-2-2-5-1-4%202-9%200-11-3-3-5-3-5%208-5h10v-3c0-11-8-18-17-14m-226%201l1%203%2010%2027c0%203-5%207-7%207-1-1-2%200-2%202-1%203%201%203%205%203%206-1%208-5%2014-24l7-18-3-1c-4%200-5%201-8%2016l-2%206-4-10c-4-12-4-12-8-12l-3%201m-85%204c-4%201-5%2012-3%2017%203%205%2010%205%2012-1%204-9-2-19-9-16m33%200c-6%203-6%2018%201%2020%205%202%207%200%208-10v-9c-2-1-6-2-9-1m311%200c-3%201-5%206-5%2010%200%209%206%2013%2012%208%202-2%203-15%201-17-2-1-6-2-8-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png","srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/41200/TIL.png 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/f979a/TIL.png 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png 660w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/322ad/TIL.webp 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/de3b3/TIL.webp 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/2b2b5/TIL.webp 660w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<h1>Array(List)</h1>\n<p>JavaScript에서는 Array, Python에서는 List이다.</p>\n<p>Python도 Array사용 할 수 있지만 <code>import Array</code>모듈을 import해야한다.</p>\n<h2>Array의 특징</h2>\n<p>순차적으로 데이터를 저장하는 자료구조</p>\n<ul>\n<li>가장 큰 특징으로 순차적(ordered)으로 데이터를 저장한다.</li>\n<li>저장하는 데이터는 보통 요소(element)라고 한다.</li>\n<li>연결된 데이터들을 순차적으로 저장할때 사용한다.</li>\n<li>순서 상관없더라도 연결된 데이터들 저장할때 사용</li>\n<li>가장 자주 사용됨</li>\n</ul>\n<p>기타 특징</p>\n<ul>\n<li>\n<p>삽입(insertion) 순서대로 저장됨 (새로 삽입되는 요소는 꼬리가됨)</p>\n</li>\n<li>\n<p>이미 생성된 리스트도 수정 가능(mutable)</p>\n</li>\n<li>\n<p>동일한 값 여러번 삽입 가능</p>\n</li>\n<li>\n<p>Multi-dimentional Array(다중 차원 배열)\nArray의 요소가 array가 될 수있음 일반적으로 2D(2차원) array가 많이 사용됨</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">A </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [[</span><span class=\"mtk4\">11</span><span class=\"mtk1\">,</span><span class=\"mtk4\">22</span><span class=\"mtk1\">,</span><span class=\"mtk4\">33</span><span class=\"mtk1\">],[</span><span class=\"mtk4\">44</span><span class=\"mtk1\">,</span><span class=\"mtk4\">55</span><span class=\"mtk1\">,</span><span class=\"mtk4\">66</span><span class=\"mtk1\">],[</span><span class=\"mtk4\">77</span><span class=\"mtk1\">,</span><span class=\"mtk4\">88</span><span class=\"mtk1\">,</span><span class=\"mtk4\">99</span><span class=\"mtk1\">]]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># A[0][0] = 11</span></span></span></code></pre>\n</li>\n</ul>\n<h2>Array 내부구조</h2>\n<ul>\n<li>순서가 있으므로 각각의 element에 번호를 부여하는데 이 번호를 index라고 함.</li>\n<li>index는 0부터 시작되는데, 마지막부터 시작할때는 -1부터 세면서 내려간다.</li>\n</ul>\n<p>순차적으로 저장하는 이유\n실제 메모리 상에서, 즉 물리적으로 데이터가 순차적으로 저장되기 때문</p>\n<p>데이터에 순서가 있기 때문에</p>\n<ol>\n<li>index가 존재한다.\n0부터 시작하는 index</li>\n<li>Indexing\nindex를 사용해 특정 요소를 array(list)로 붙 일겅 들이는 것이 가능</li>\n<li>Slicing\n요소의 특정 부분, 즉 n번째 index부터 m번째 index까지 따로 분리해 조작 가능</li>\n</ol>\n<h2>단점</h2>\n<ol>\n<li>\n<p>순차적으로 저장되어 있으므로 중간내역 삭제하면 인덱스 가 앞으로 이동하게되고 중간에 추가가되면 뒤로 밀리기 되므로 작업이 느려 질 수 있음 <strong>Array는 정보가 자주 삭제되거나 추가되는 데이터를 담기 적절하지 않음</strong></p>\n</li>\n<li>\n<p>Array Resizing으로 배열은 메모리 순차적으로 채워지므로 메모리를 미리 할당한다. 이를 pre-allocation이라고 하지만 할당한 메모리 보다 요소가 많아지면 메모리를 더 할당하는 것을 resizing이라고 함. 이 작업은 시간이 오래 걸린다.</p>\n</li>\n</ol>\n<p><strong>그러므로 Array는 사이즈 예측이 잘 안 된느 데이터를 다루기 적절치 않다.</strong></p>\n<h2>사용시기</h2>\n<ul>\n<li>순차열적인 데이터를 저장할 때\n<ul>\n<li>ex) 주식 가격. 어제의 2만원과 오늘의 2만원이 다름 >>> 값보다는 순서가 중요한 데이터</li>\n</ul>\n</li>\n<li>다차원 데이터를 다룰 때 >>> Multi-dimensional Array</li>\n<li>어떠한 특정 요소를 빠르게 읽어야 할 때 >> index를 통해 곧바로 읽을 수 있기 때문</li>\n<li>데이터의 사이즈가 급변하게 자주 변하지 않을 때</li>\n<li>요소가 자주 삭제 되거나 추가되지 않을 때</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","categories":["Data Structure"],"date":"April 08, 2020","description":"Data Structure TIL 배운거 정리","id":"1af5a660-6f54-5a22-bfa2-596b3cf77796","keywords":["Data Structure","TIL"],"slug":"/blog/TIL/2020-04-08-DataStructure[1arraylist]-TIL/","title":"Data Structure(Array) TIL","readingTime":{"text":"4 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1094019748","36698639"]}