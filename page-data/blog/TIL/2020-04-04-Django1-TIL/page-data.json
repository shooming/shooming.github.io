{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/blog/TIL/2020-04-04-Django1-TIL/","result":{"pageContext":{"article":{"banner":{"alt":"TIL","caption":"Photo by <u><a href=\"https://wonkooklee.github.io/thumbnail_maker/\">Thumbnail Maker</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='660'%20height='400'%20viewBox='0%200%20660%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20200v200h661V0H0v200m211-13c0%206%200%207-1%206-10-4-19%203-19%2015s9%2019%2018%2014h4l3%201h2v-44h-7v8m311-8v8c0%207%200%207-2%206-11-4-20%205-19%2018%202%2011%2010%2016%2019%2011%202-2%203-2%203%200l3%201h2v-42c1-2-5-3-6-2m-394%207c0%202%200%202%206%202h6v35h7v-35h6l5-1%201-2c0-2-2-2-15-2h-16v3m171%2017v20h7v-40h-7v20m29%200v20h24v-5h-17v-35h-7v20m-164-8c-11%209-7%2027%207%2029%2014%201%2021-20%209-29-4-4-12-4-16%200m66-2c-3%202-4%203-2%206h4c5-3%207-2%209%200%203%203%202%205-2%205-8%200-15%206-14%2012%202%207%208%2010%2015%206h4l3%201h2v-13c0-12%200-12-3-15s-10-4-16-2m134%200c-10%204-12%2022-3%2028%206%205%2020%203%2018-2%200-2-1-2-2-2-8%203-13%202-15-4l-1-3h20v-3c0-11-8-18-17-14m26%201c-4%201-5%202-3%204%201%202%202%202%205%201%205-3%208-2%2010%200%201%203%201%205-2%205-8%200-15%205-15%2011%200%208%207%2011%2015%207%203-2%204-2%204-1s1%202%203%202h2v-12c0-16-2-19-11-19l-8%202m36%201c-3%202-3%202-3%200s-1-2-3-2h-3v30h7v-10c0-11%202-15%207-15%203%200%204-1%204-5%200-2-6-1-9%202m23-1c-3%202-4%202-4%201l-2-2h-3v30h6v-11c0-12%201-13%206-14%205-2%206%201%206%2014v11h7v-10c0-11-1-17-4-19-3-3-9-2-12%200m31-1c-10%203-12%2021-4%2028%207%205%2023%203%2019-2-1-2-2-2-5-1-4%202-9%200-11-3-3-5-3-5%208-5h10v-3c0-11-8-18-17-14m-226%201l1%203%2010%2027c0%203-5%207-7%207-1-1-2%200-2%202-1%203%201%203%205%203%206-1%208-5%2014-24l7-18-3-1c-4%200-5%201-8%2016l-2%206-4-10c-4-12-4-12-8-12l-3%201m-85%204c-4%201-5%2012-3%2017%203%205%2010%205%2012-1%204-9-2-19-9-16m33%200c-6%203-6%2018%201%2020%205%202%207%200%208-10v-9c-2-1-6-2-9-1m311%200c-3%201-5%206-5%2010%200%209%206%2013%2012%208%202-2%203-15%201-17-2-1-6-2-8-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png","srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/41200/TIL.png 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/f979a/TIL.png 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/bc51f/TIL.png 660w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/22602a05cca30b96076a0f50d0b3dd18/322ad/TIL.webp 165w,\n/static/22602a05cca30b96076a0f50d0b3dd18/de3b3/TIL.webp 330w,\n/static/22602a05cca30b96076a0f50d0b3dd18/2b2b5/TIL.webp 660w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<h1>Django 1</h1>\n<pre class=\"grvsc-container abyss\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">sudo apt install tree</span></span></span></code></pre>\n<p>tree 목록 보기 쉽게 만들어주는 플러그인이다.</p>\n<p>asgi = 비동기식\nwsgi = 웹서버, 만들때 반드시 필요한 모듈 장고,플라스크 등 다씀\nurls = url만들어서 라우팅을 해준다</p>\n<ol>\n<li>프로젝프 만들 디렉토리 만들기</li>\n</ol>\n<p>Django 프로젝트를 만들 디렉토리를 만든후</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">django</span><span class=\"mtk7\">-</span><span class=\"mtk1\">admin startproject </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">프로젝트이름</span><span class=\"mtk7\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">django</span><span class=\"mtk7\">-</span><span class=\"mtk1\">admin startproject </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">프로젝트이름</span><span class=\"mtk7\">&gt;</span><span class=\"mtk1\"> .</span></span></span></code></pre>\n<p>django-admin startproject &#x3C;프로젝트이름> 을 하면 아래의 트리처럼 되면서 프로젝트 이름의 폴더를\n새로 만들고 그안에 파일을 생성하지만 끝에 .(dot)을 찍으면 현재 폴더에서 만들겠다는 뜻이 된다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">├── manage.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">└── test01</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── __init__.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── asgi.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── settings.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── urls.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    └── wsgi.py</span></span></span></code></pre>\n<p>위와 같은 트리형태로 초기 설정이된다. 기본적으로 이 프로젝트에서 최상위 위치는 <code>manage.py</code>가 있는 위치가 된다.</p>\n<p>초기 세팅이 되고나면, settings.py를 설정해 주어야한다.</p>\n<p><code>settings.py</code> = 프로젝트의 셋팅값에 따라 프로젝트의 방향 정해짐 (제일 먼저 보게됨)</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">import os - manage.py가 있는 장소를 최상위 경로로 만들기위해 사용 (BASE_DIR)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">SECRET_KEY = 사용안함 보안위험 함부러 관리하지 말것</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">DEBUG = True 오류페이지 보여줄지 여부, 개발할때만 사용, 배포할때 무조건 끌것</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ALOOWED_HOSTS = [&#39;*&#39;] - &#39;*&#39;(모두 들어올수 있게끔함), 한국의 ip대역 넣는 식으로 들어올 수 있는 사용자 제어함.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">INSTALLED_APPS = [] - django에 내장된 기능들로 admin, auth 사용하지 않는다.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">MIDDLEWARE = [] Auth,Csrf(위장 피하기위해서 사용, 위장페이지 검사) # 주석처리할것</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ROOT_URLCONF = 최상위 url 설정 &#39;test01.urls&#39; ex)localhost:8000/test01.url 호출됨</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">TEMPLATES = HTML CSS 만들어주는 것이지만 지우지는 않는다.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">WSGI_APPLICANTION = </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">DATABASES = SQLITE3 관계형 데이터베이스, 파이썬 설치시 같이 설치되며 django에서 기본으로 지원</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">AUTH_PASSWARD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">LANGUAGE_CODE = 지원언어</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">TIME_ZONE = &#39;asia/seoul&#39; utc 지원하지만 +9 -9 단순히 붙이는 걸로는 안됨</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">USE_I18N = 다국어지원</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">USE_L10N = 다국어지원</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">USET_TZ = 서버 시간?</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">STATIC_URL = 정적 페이지주소 파일 같은거 받을 때 사용</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&#39;django.contrib.admin&#39; 지우면 url 설정 바꿔줘야함 import admin으로 된것</span></span></code></pre>\n<p>세팅이 끝났으면</p>\n<pre class=\"grvsc-container abyss\" data-language=\"django\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">python manage.py startapp user</span></span></code></pre>\n<p>startapp 명령어를 통해 만들기 원하는 앱을 만들 준비를 한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"bash\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">├── db.sqlite3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">├── manage.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">├── test01</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   ├── __init__.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   ├── __pycache__</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   │   ├── __init__.cpython-38.pyc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   │   ├── settings.cpython-38.pyc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   │   ├── urls.cpython-38.pyc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   │   └── wsgi.cpython-38.pyc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   ├── asgi.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   ├── settings.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   ├── urls.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   └── wsgi.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">└── user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── __init__.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── admin.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── apps.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── migrations</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    │   └── __init__.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── models.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├── tests.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    └── views.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span></code></pre>\n<p>그러면 이러한 형태가 되는데 test01의 urls.py를 user에 복사한다.</p>\n<p>새로운 앱을 만들었는데 새로만들어진 앱은 django가 인식하지 못한다. setting.py에서 INSTALLED_APPS 에 추가해준다.\n추가할 앱이름의 폴더가 user라면 'user'라고 작성하면 된다.</p>\n<p>여기까지 설정을 마치면 데이터 베이스의 모델을 만들어 주어야한다. 그렇게 하기위해 <code>models.py</code>를 설정해 준다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># models.py</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">from</span><span class=\"mtk1\"> django.db </span><span class=\"mtk7\">import</span><span class=\"mtk1\"> models </span><span class=\"mtk3\">#orm 수행</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">User</span><span class=\"mtk1\">(</span><span class=\"mtk6 mtki mtku\">models</span><span class=\"mtk1\">.</span><span class=\"mtk6 mtki mtku\">Model</span><span class=\"mtk1\">):  </span><span class=\"mtk3\">#User는 models.Model의 서브클래스임</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    name     </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> models.CharField(</span><span class=\"mtk19 mtki\">max_length</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">50</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    email    </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> models.CharField(</span><span class=\"mtk19 mtki\">max_length</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">200</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    password </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> models.CharField(</span><span class=\"mtk19 mtki\">max_length</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    created_at </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> models.DateTimeField(</span><span class=\"mtk19 mtki\">auto_now_add</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">True</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    updated_at </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> models.DateTimeField(</span><span class=\"mtk19 mtki\">auto_now</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">True</span><span class=\"mtk1\">)     </span><span class=\"mtk3\">#django의 &gt;편의성기능 중 하나 now_add 최초 한번만 기록 수정안함, auto_now 업데이&gt;트 될 때마다 업데이트함</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15 mtki\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Meta</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        db_table </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;users&#39;</span><span class=\"mtk1\">  </span><span class=\"mtk3\"># 데이터 베이스 이름 지정, 기록안하면 &quot;app이름_클래스명&quot;으로 만듦</span></span></span></code></pre>\n<p>위는 간단한 데이터베이스 모델을 만든 것이다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"django\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">python manage.py makemigrations &lt;앱이름&gt; </span></span></code></pre>\n<p>models migration 할시 앱이름 꼭 작성해야한다. 그렇지 않으면 모든 앱들을 migration을 시켜 순서가 꼬여 곤란해 질 수 있다.</p>\n<p>migration한 파일들은 해당앱 migrations폴더에 저장된다. makemigrations를 한다는 것은 해당 app의 models.py안 클래스에 코딩해놓은 테이블 기반으로 Django에서 쓸수있게 장고에서 따로 메타데이터로 만들어놓는 것이다. 그렇게해야 테이블구조 생김 migrations 폴더에 파일을생성한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"bash\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">python manage.py migrate user 0001</span></span></span></code></pre>\n<p>방금전 migration한 내용을 바탕으로 데이터베이스에 실제로 테이블을 만들어주는 것이 migrate이다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk5 { color: #FFEEBB; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","categories":["Django"],"date":"April 02, 2020","description":"Django TIL 배운거 정리","id":"a3f5d88d-2187-51d5-bfda-862020b5bc17","keywords":["Django","TIL"],"slug":"/blog/TIL/2020-04-04-Django1-TIL/","title":"Django TIL 1","readingTime":{"text":"6 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1094019748","36698639"]}