{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/blog/Project/2020-06-14-WesightTimer/","result":{"pageContext":{"article":{"banner":null,"body":"<h1>Wesight Timer</h1>\n<h2>Wesight Timer 2번째 Project의 시작</h2>\n<p>Wesight Timer는 현재 다니는 부트캠프에서 수행했던 Project를 마친 후의 기록입니다.</p>\n<h3>1. 프로젝트의 시작</h3>\n<p>이번 프로젝트는 1차프로젝트가 끝나고 1주일 뒤에 시작되었다. 이번 프로젝트의 내용은 Inshight Timer라고 하는 해외의 명상 컨텐츠를 제공하는 사이트의 클론이었다. 이번 프로젝트의 인원도 Front-End 3명, Back-End 2명의 인원으로 구성되었다.</p>\n<p>이번 프로젝트의 핵심기능은 음원(mp3)같은 컨텐츠를 스트리밍하는 것이었다. Django로 가능할지 모르겠지만 일단 시작해 보도록했다. 나는 지난 프로젝트때는 회원가입, 로그인 기능을 구현해보지 못 했기 때문에 이 부분도 해보고 싶다는 생각도 했는데 다행이 이번 사이트에는 로그인, 회원가입 기능이 있었다.</p>\n<h3>2. DataBase 모델링</h3>\n<p>이번 프로젝트의 모델링은 생각보다 어렵지 않은 편이라서 생각보다 금방 끝나게 되었다. 의외로 지난 프로젝트 모델링이 더 어려웠기 때문이지 않았을까 라고 생각되었다.\r\n이번 모델링은 회원가입된 유저가 선생이 되고 선생이 이런저런 컨텐츠를 만들며, 리뷰를 달 수 있는 테이블들을 작성하는 모델이었다.\r\n<img src=\"./img/project/wesight_timerDB.png\" alt=\"wesight_timer_db\"></p>\n<p>이번에는 테이블은 어느 정도 나왔지만 실제로 사용하지 못 했던 부분이 있어서 너무 아쉬웠다.</p>\n<h3>3. 기억 남았던 views.py의 기록</h3>\n<p>이번 프로젝트의 핵심은 스트리밍 기능의 구현이었다.\r\n하지만 막상 구현하려고 하니 생각보다 자료가 많지 않아서 많이 찾아보아야 했었다.\r\n그리고 이번에는 해보고 싶었던 회원가입, 로그인 view 사실 이 부분은 내가하지 못 하고 같이 하던 동료가 처리하게 되었는데 내 부분을 처리하고 어느 정도 고칠 수 있는 기회가 있어서 확인해 보는 것 정도만 하였다.</p>\n<h4>1) 1번재 기록</h4>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">RangeFileWrapper</span><span class=\"mtk1\"> (</span><span class=\"mtk15 mtki\">object</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk15\">__init__</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">self</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">filelike</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">blksize</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">resume</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">length</span><span class=\"mtk7\">=</span><span class=\"mtk4\">None</span><span class=\"mtk1\">): [</span><span class=\"mtk4\">7</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        self.filelike </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> filelike</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        self.remaining </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> length </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> resume</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        self.blksize </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> blksize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        data </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> self.filelike.seek(resume)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk15\">__iter__</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">self</span><span class=\"mtk1\">): [</span><span class=\"mtk4\">8</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> self</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk15\">__next__</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">self</span><span class=\"mtk1\">): [</span><span class=\"mtk4\">9</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> self.remaining </span><span class=\"mtk7\">is</span><span class=\"mtk1\"> </span><span class=\"mtk4\">None</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            data </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> self.filelike.read(self.blksize)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> data:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">StopIteration</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> self.remaining </span><span class=\"mtk7\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">StopIteration</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            data </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> self.filelike.read(</span><span class=\"mtk15\">min</span><span class=\"mtk1\">(self.remaining, self.blksize))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> </span><span class=\"mtk7\">not</span><span class=\"mtk1\"> data:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">StopIteration</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            self.remaining </span><span class=\"mtk7\">-=</span><span class=\"mtk1\"> </span><span class=\"mtk15\">len</span><span class=\"mtk1\">(data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">ContentPlay</span><span class=\"mtk1\">(</span><span class=\"mtk6 mtki mtku\">View</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">get</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">self</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">request</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">content_id</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">try</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            second  </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">int</span><span class=\"mtk1\">(request.</span><span class=\"mtk4\">GET</span><span class=\"mtk1\">.get(</span><span class=\"mtk11\">&#39;second&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">0</span><span class=\"mtk1\">)) [</span><span class=\"mtk4\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            source  </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> Content.objects.get(</span><span class=\"mtk19 mtki\">id</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> content_id).file_source [</span><span class=\"mtk4\">2</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            name    </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> os.path.basename(source) </span><span class=\"mtk3\"># 해당파일의 이름</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            size    </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> os.path.getsize(source) </span><span class=\"mtk3\"># 해당 파일의 크기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            content </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> AudioSegment.from_mp3(source) [</span><span class=\"mtk4\">3</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            length  </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">int</span><span class=\"mtk1\">(</span><span class=\"mtk15\">len</span><span class=\"mtk1\">(content) </span><span class=\"mtk7\">/</span><span class=\"mtk1\"> </span><span class=\"mtk4\">1000</span><span class=\"mtk1\">) [</span><span class=\"mtk4\">4</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            chunk   </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">int</span><span class=\"mtk1\">(size </span><span class=\"mtk7\">/</span><span class=\"mtk1\"> length) [</span><span class=\"mtk4\">5</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> second </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">or</span><span class=\"mtk1\"> second </span><span class=\"mtk7\">&gt;</span><span class=\"mtk1\"> length:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            content_type, encoding </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> mimetypes.guess_type(source)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            content_type </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> content_type </span><span class=\"mtk7\">or</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;application/octet-stream&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            resp </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> StreamingHttpResponse(RangeFileWrapper(</span><span class=\"mtk15\">open</span><span class=\"mtk1\">(source, </span><span class=\"mtk11\">&#39;rb&#39;</span><span class=\"mtk1\">), chunk </span><span class=\"mtk7\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, chunk </span><span class=\"mtk7\">*</span><span class=\"mtk1\"> second, size), </span><span class=\"mtk19 mtki\">status</span><span class=\"mtk7\">=</span><span class=\"mtk4\">200</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">content_type</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;audio/mp3&#39;</span><span class=\"mtk1\">) [</span><span class=\"mtk4\">6</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            resp[</span><span class=\"mtk11\">&quot;Cache-Control&quot;</span><span class=\"mtk1\">] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;no-cache&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            resp[</span><span class=\"mtk11\">&quot;Accept-Ranges&quot;</span><span class=\"mtk1\">] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;bytes&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            resp[</span><span class=\"mtk11\">&quot;Content-Disposition&quot;</span><span class=\"mtk1\">] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">f</span><span class=\"mtk11\">&quot;attachment; filename=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">name</span><span class=\"mtk4\">}</span><span class=\"mtk11\">&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> resp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">except</span><span class=\"mtk1\"> ObjectDoesNotExist:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">404</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h5>코드 설명</h5>\n<ul>\n<li>[1] : front에서 원하는 시간 부터 재생할 수 있게 second(원하는 초)를 받아온다.</li>\n<li>[2] : 데이터 베이스에서 원하는 컨텐츠 id를 받아와서 해당 파일의 위치를 db에서 가져온다.</li>\n<li>[3] : pydub 라이브러리를 사용하여 해당 파일의 용량을 파악한다.</li>\n<li>[4] : 해당 파일의 총 재생시간을 알기위해 1000(1초)단위로 몇 초가 걸리는지 파악한다.</li>\n<li>[5] : 해당 파일의 전체크기를 전체 길이로 나누어 1초당 용량을 계산다.</li>\n<li>[6] : StreamingHttpResponse작성하면서 RangeFileWrapper 파일로 정보를 보내서 원하는 chunk단위로 쪼갤 수 있게 한다.</li>\n<li>[7] : iterator class로 받아온 정보들을 클래스 내부에서 사용할 수 있게 self.변수를 할당 한다.</li>\n<li>[8] : StopIteration() 을 return 할때까지 반복하는 iterator의 시작</li>\n<li>[9] : next는 StopIteration()가 반환될때까지 파일을 가능할 때 만큼 쪼갠다.</li>\n</ul>\n<p>이 부분이 우리가 만들었던 스트리밍 기능이다. 방식은 StreamingHttpResponse를 활용한 전송 방식이었다. front에서 원하는 컨텐츠의 id를 보내주면 해당하는 컨텐츠를 chunk 단위로 쪼개어서 보내 주는 방식이다. RangeFileWrapper라는 이터레이터를 만들어서 그안에서 컨텐츠를 쪼개어준다.</p>\n<h4>2) 2번재 기록</h4>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">SignUpView</span><span class=\"mtk1\">(</span><span class=\"mtk6 mtki mtku\">View</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">VALIDATION_RULES</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">&#39;password&#39;</span><span class=\"mtk1\"> : </span><span class=\"mtk15 mtki\">lambda</span><span class=\"mtk1\"> </span><span class=\"mtk19 mtki\">password</span><span class=\"mtk1\">: </span><span class=\"mtk4\">True</span><span class=\"mtk1\"> </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> </span><span class=\"mtk7\">not</span><span class=\"mtk1\"> re.search(</span><span class=\"mtk15 mtki\">r</span><span class=\"mtk11\">&quot;^</span><span class=\"mtk7\">(?=</span><span class=\"mtk11\">.</span><span class=\"mtk7\">*</span><span class=\"mtk4\">[a-zA-Z]</span><span class=\"mtk7\">)(?=</span><span class=\"mtk11\">.</span><span class=\"mtk7\">*</span><span class=\"mtk4\">[0-9]</span><span class=\"mtk7\">)</span><span class=\"mtk4\">[0-9A-Za-z$&amp;+,:;=?@#|&#39;&lt;&gt;.^*()%!-]</span><span class=\"mtk7\">{6,50}</span><span class=\"mtk11\">$&quot;</span><span class=\"mtk1\">, password) </span><span class=\"mtk7\">else</span><span class=\"mtk1\"> </span><span class=\"mtk4\">False</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } [</span><span class=\"mtk4\">2</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">post</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">self</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">request</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">try</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            data </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> json.loads(request.body)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> </span><span class=\"mtk15\">len</span><span class=\"mtk1\">(data.keys()) </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">3</span><span class=\"mtk1\"> :</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> value </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> data.values():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> value </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;&quot;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk7\">=</span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> value, validator </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> self.</span><span class=\"mtk4\">VALIDATION_RULES</span><span class=\"mtk1\">.items(): [</span><span class=\"mtk4\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> validator(data[value]):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk7\">=</span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> User.objects.filter(</span><span class=\"mtk19 mtki\">email</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> data[</span><span class=\"mtk11\">&#39;email&#39;</span><span class=\"mtk1\">]).exists():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> JsonResponse({</span><span class=\"mtk11\">&#39;MESSAGE&#39;</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">&#39;ALREADY_EXSIST&#39;</span><span class=\"mtk1\">}, </span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">401</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            User.objects.create(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk19 mtki\">email</span><span class=\"mtk1\">     </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> data[</span><span class=\"mtk11\">&#39;email&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk19 mtki\">full_name</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> data[</span><span class=\"mtk11\">&#39;full_name&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk19 mtki\">password</span><span class=\"mtk1\">  </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> bcrypt.hashpw(data[</span><span class=\"mtk11\">&#39;password&#39;</span><span class=\"mtk1\">].encode(</span><span class=\"mtk11\">&#39;utf-8&#39;</span><span class=\"mtk1\">),bcrypt.gensalt()).decode(</span><span class=\"mtk11\">&#39;utf-8&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">200</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">except</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">KeyError</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> JsonResponse({</span><span class=\"mtk11\">&#39;MESSAGE&#39;</span><span class=\"mtk1\">:</span><span class=\"mtk11\">&#39;INVALIED_KEY&#39;</span><span class=\"mtk1\">}, </span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">except</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">ValueError</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> HttpResponse(</span><span class=\"mtk19 mtki\">status</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">400</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h5>코드 설명</h5>\n<ul>\n<li>[1] : key와 value를 가져와 value에는 정규표현 lambda식을 담고, key를 활용해 data['password']로 만든다.</li>\n<li>[2] : 정규표현 규칙을 모아둔 dictionary이다.</li>\n</ul>\n<p>이번 회원가입에서는 정규표현식을 활용해서 비밀번호를 6자이상, 영문+숫자 포함되게 작성해야만 회원가입을 할 수 있게 해주는 방식으로 만들었다. 원래는 다른 것들도 확인하려고 dictionary 형태로 만들고 for문 돌면서 확인하려 했으나 원래 받아오는 정보가 많지 않아서 그냥 email만 사용했는데 저렇게 되면 굳이 lamda나 dictionary를 사용할 필요가 없었을거 같은데 나중에 리팩토링이 필요해보인다.</p>\n<h3>프로젝트 후기</h3>\n<p>이번 프로젝트 후기는 지난번 후기보다 짧게 끝내는 것 같은 느낌이든다.</p>\n<p>이번 프로젝트에서도 모자라도 생각했던것은 Trello를 사용하긴 했지만 매번 깜박하고 업데이트를 늦게했던 점이다. 항상 자신이 무슨 업무를 하고 있는지 인지시켜 줄 수 있고 업무의 진행도를 알 수 있는 지표임에도 불구하고 소홀 했던것 같다. 앞으로 좀더 신경 쓸 수 있도록 해야겠다.</p>\n<p>그 다음은 회의를 많이 하지 않았던 점이었던것 같다. 그래도 처음 프로젝트 때보다는 소통은 많이 한 편이었던것 같지만 그래도 전체적으로 회의를 해서 업무를 공유하는 등의 행위는 많이 하지 않았던것 같아서 아쉬움이 남는다.</p>\n<p>그리고 기능을 더 추가하지 못 한것에 대한 아쉬움이 남는다. 물론 내가 속도를 많이 내지 못해서 추가하지 못한것이라고 생각한다. 다음에는 일정이나 시간조절에도 신경을 많이써야 겠다.</p>\n<p>이번 프로젝트로 나름대로(?) 새로운것들을 시도해 본것 같다. 그리고 프로젝트를 진행하면서 팀원들도 다들 열심해 주어서 즐겁게 할 수 있었던것 같다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk5 { color: #FFEEBB; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","categories":["Project"],"date":"June 14, 2020","description":"Project 수행 후 필요한 것 정리","id":"cb256c0b-ee70-5258-b9e7-29d17efa6797","keywords":["Project","WesightTimer","TIL"],"slug":"/blog/Project/2020-06-14-WesightTimer/","title":"Wesight Timer Project","readingTime":{"text":"10 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1094019748","36698639"]}